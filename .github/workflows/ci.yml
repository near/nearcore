name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  merge_group:

env:
  CI_HACKS: 1

# BE CAREFUL IF EDITING THIS FILE:
# If you add/remove python tests from here, you should also update `check_pytests.py`â€™s list of GHA_TESTS
# so that it stays in-sync, to make sure no tests are lost.

jobs:
  cargo_nextest:
    name: "Cargo Nextest (${{matrix.name}})"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            id: linux
            os: warp-ubuntu-2204-x64-16x
            type: stable
            upload_profraws: true
            run_on_pr: true
          - name: Linux Nightly
            id: linux-nightly
            os: warp-ubuntu-2204-x64-16x
            type: nightly
            upload_profraws: true
            run_on_pr: true
          - name: MacOS
            id: macos
            os: warp-macos-14-arm64-6x
            type: stable
            upload_profraws: false
            run_on_pr: false
    timeout-minutes: 90
    steps:
      - if: github.event_name != 'pull_request' || matrix.run_on_pr
        uses: actions/checkout@v4

      # Install all the required tools
      - if: github.event_name != 'pull_request' || matrix.run_on_pr
        uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just,cargo-nextest,cargo-llvm-cov

      # Run the tests
      - name: just nextest-slow ${{ matrix.type }} (with coverage)
        if: github.event_name != 'pull_request' || matrix.run_on_pr
        run: |
          mkdir -p coverage/profraw/{unit,binaries}
          just codecov-ci "nextest-slow ${{ matrix.type }}"

      # Upload the coverage files
      - if: github.event_name != 'pull_request' || matrix.run_on_pr
        run: |
          mv coverage/codecov/{new,unit-${{matrix.id}}}.json
          mv coverage/profraw/{new,unit/${{matrix.id}}}.tar.zst
          just tar-bins-for-coverage-ci
          mv coverage/profraw/binaries/{new,${{matrix.id}}}.tar.zst
      - if: matrix.upload_profraws && (github.event_name != 'pull_request' || matrix.run_on_pr)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-profraw-${{ github.sha }}-${{ matrix.name }}
          path: coverage/profraw
          retention-days: 2
      - if: github.event_name != 'pull_request' || matrix.run_on_pr
        uses: actions/upload-artifact@v4
        with:
          name: coverage-codecov-${{ github.sha }}-cargo_nextest-${{ matrix.name }}
          path: coverage/codecov

  protobuf_backward_compat:
    name: "Protobuf Backward Compatibility"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bufbuild/buf-setup-action@1158f4fa81bc02e1ff62abcca6d516c9e24c77da
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: bufbuild/buf-breaking-action@a074e988ee34efcd4927079e79c611f428354c01
        with:
          against: "https://github.com/near/nearcore.git#${{github.event.pull_request.base.sha && format('ref={0}', github.event.pull_request.base.sha) || 'branch=master' }}"

  pytest_nightly_tests:
    name: "Large pytest (nightly) Checks"
    runs-on: warp-ubuntu-2204-x64-16x
    strategy:
      fail-fast: false
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
      - uses: WarpBuilds/setup-python@v5
        with:
          python-version: 3.11
          cache: pip
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: cargo-llvm-cov
      - run: pip3 install --user -r pytest/requirements.txt
      # This is the only job that uses `--features nightly` so we build this in-line instead of a
      # separate job like done with the regular neard.
      - run: cargo llvm-cov show-env | grep -v RUSTFLAGS | tr -d "'" >> "$GITHUB_ENV"
      - run: echo "RUSTC_WORKSPACE_WRAPPER=$PWD/scripts/coverage-wrapper-rustc" >> "$GITHUB_ENV"
      - run: echo "CARGO=1" >> "$GITHUB_ENV"
      - run: cargo build --profile dev-release -p neard --bin neard --features nightly
      # Note: We're not running spin_up_cluster.py for non-nightly
      # because spinning up non-nightly clusters is already covered
      # by other steps in the CI, e.g. upgradable.
      - run: python3 pytest/tests/sanity/spin_up_cluster.py
        env:
          NEAR_ROOT: "target/dev-release"
      - run: mkdir -p coverage/codecov
      - run: cargo llvm-cov report --profile dev-release --codecov --output-path coverage/codecov/py-nightly.json
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-codecov-${{ github.sha }}-py-nightly
          path: coverage/codecov

  pytest_tests:
    name: "Large pytest Tests"
    runs-on: warp-ubuntu-2204-x64-8x
    steps:
      - uses: actions/checkout@v4
      - uses: WarpBuilds/setup-python@v5
        with:
          python-version: 3.11
          cache: pip
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: cargo-llvm-cov
      - run: pip3 install --user -r pytest/requirements.txt
      - run: cargo llvm-cov show-env | grep -v RUSTFLAGS | tr -d "'" >> "$GITHUB_ENV"
      - run: echo "RUSTC_WORKSPACE_WRAPPER=$PWD/scripts/coverage-wrapper-rustc" >> "$GITHUB_ENV"
      - run: echo "CARGO=1" >> "$GITHUB_ENV"
      - run: cargo build --locked --profile dev-release -p neard --bin neard
      - run: echo "CURRENT_NEARD=$PWD/target/dev-release/neard" >> "$GITHUB_ENV"
      - run: echo "NEAR_ROOT=$PWD" >> "$GITHUB_ENV"
      - run: python3 scripts/state/update_res.py check
      # TODO(#13556): Test is flaky, disable for now
      # - run: pushd pytest && python3 tests/sanity/upgradable.py && popd
      - run: pushd pytest && python3 tests/sanity/db_migration.py && popd
      - run: pushd pytest && python3 tests/sanity/backward_compatible.py && popd

      - run: mkdir -p coverage/codecov
      - run: cargo llvm-cov report --profile dev-release --codecov --output-path coverage/codecov/py.json
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-codecov-${{ github.sha }}-py
          path: coverage/codecov

  protocol_schema_check:
    name: "Protocol Schema"
    runs-on: warp-ubuntu-2204-x64-8x
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just check-protocol-schema

  py_style_check:
    name: "Style"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip
      - run: pip3 install --user -r pytest/requirements.txt
      - run: just python-style-checks

  check_fmt:
    name: "Cargo Fmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just check-cargo-fmt

  check_clippy:
    name: "Cargo Clippy"
    runs-on: warp-ubuntu-2204-x64-8x
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just check-cargo-clippy

  doctests:
    name: "Rust Doctests"
    runs-on: warp-ubuntu-2204-x64-8x
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just doctests

  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: streetsidesoftware/cspell-action@v6

  check_cargo_deny:
    name: "Cargo Deny"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just,cargo-deny
      - run: just check-cargo-deny

  check_themis:
    name: "Themis"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just check-themis

  check_machete:
    name: "Cargo machete (unused dependencies)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just,cargo-machete
      - run: just check-cargo-machete

  check_non_default:
    name: "Non-default Configuration Builds"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just check-non-default

  check_udeps:
    name: "Unused Dependencies"
    runs-on: warp-ubuntu-2204-x64-8x
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just,cargo-udeps
      - run: just check-cargo-udeps

  cargo_audit:
    name: "Cargo Audit"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: cargo-audit
      - run: cargo audit -D warnings

  generate_coverage:
    name: "Generate Coverage Artifact"
    runs-on: ubuntu-latest
    needs:
      - cargo_nextest
    strategy:
      fail-fast: false
      matrix:
        include:
          - type: unit
            profraws: unit
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1000 # have enough history to find the merge-base between PR and master
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-profraw-*
          path: coverage/profraw
          merge-multiple: true
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: cargo-llvm-cov
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip
      - run: pip3 install --user diff-cover
      - run: for f in coverage/profraw/binaries/*.tar.zst; do tar -x --zstd -f $f; done
      - name: Retrieve the profraws used to generate this coverage (${{matrix.profraws}})
        run: |
          for profile in ${{matrix.profraws}}; do
            for f in coverage/profraw/$profile/*.tar.zst; do
              tar -x --zstd -C target/ -f $f
            done
          done
      - run: cargo llvm-cov show-env | grep -v RUSTFLAGS | tr -d "'" >> "$GITHUB_ENV"
      - run: mkdir -p coverage/lcov coverage/html
      - run: cargo llvm-cov report --profile dev-release --lcov --output-path coverage/lcov/${{matrix.type}}.lcov
      - run: cargo llvm-cov report --profile dev-release --html --hide-instantiations --output-dir coverage/html/${{matrix.type}}-full
      - run: git fetch origin master
      - run: diff-cover --compare-branch=origin/master --html-report coverage/html/${{matrix.type}}-diff.html coverage/lcov/${{matrix.type}}.lcov
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov-${{ matrix.type }}
          path: coverage/lcov
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ matrix.type }}
          path: coverage/html

  upload_coverage:
    name: "Upload Coverage"
    runs-on: ubuntu-latest
    needs:
      - cargo_nextest
      - pytest_tests
      - pytest_nightly_tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-codecov-*
          merge-multiple: true
      # Keep the number of uploads here in sync with codecov.ymlâ€™s after_n_build value
      # codecov will send a comment only after having received this number of uploads.
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        with:
          files: unit-linux.json
          fail_ci_if_error: true
          flags: unittests
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        with:
          files: unit-linux-nightly.json
          fail_ci_if_error: true
          flags: unittests-nightly
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        with:
          files: py.json
          fail_ci_if_error: true
          flags: pytests
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        with:
          files: py-nightly.json
          fail_ci_if_error: true
          flags: pytests-nightly

  publishable_packages_check:
    name: "Cargo check publishable packages separately"
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'merge_group' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            id: linux
            os: warp-ubuntu-2204-x64-2x
          - name: Windows
            id: win
            os: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@7852930e42e73b6c323ae4435f5135b58754dfdd
        with:
          tool: just
      - run: just check-publishable-separately
      - run: just check-publishable-separately --no-default-features
      - run: just check-publishable-separately --all-features
