[package]
name = "nearcore"
version = "0.1.0"
authors = ["Near Inc <hello@nearprotocol.com>"]
edition = "2018"

[workspace]
members = [
    "core/chain-configs",
    "core/crypto",
    "core/primitives",
    "core/primitives-core",
    "core/store",
    "core/metrics",
    "runtime/near-evm-runner",
    "runtime/near-vm-logic",
    "runtime/near-vm-runner",
    "runtime/near-vm-runner-standalone",
    "runtime/runtime",
    "runtime/runtime-params-estimator",
    "chain/chain",
    "chain/chunks",
    "chain/epoch_manager",
    "chain/pool",
    "chain/client",
    "chain/client-primitives",
    "chain/network",
    "chain/indexer",
    "chain/jsonrpc",
    "chain/jsonrpc/client",
    "chain/jsonrpc/test-utils",
    "chain/jsonrpc-primitives",
    "chain/rosetta-rpc",
    "test-utils/actix-test-utils",
    "test-utils/testlib",
    "test-utils/loadtester",
    "test-utils/state-viewer",
    "test-utils/store-validator",
    "neard/lib",
    "neard/bin",
    "tools/rpctypegen/core",
    "tools/rpctypegen/macro",
    "genesis-tools/genesis-csv-to-json",
    "genesis-tools/genesis-populate",
    "genesis-tools/keypair-generator",
    "tools/restaked",
    "tools/indexer/example",
    "tools/delay_detector"
]

[dev-dependencies]
# Pin dependency to avoid compilation errors
funty = "=1.1.0"

rand = "0.7"

near-logger-utils = { path = "./test-utils/logger" }
near-chain-configs = { path = "./core/chain-configs" }
near-crypto = { path = "./core/crypto" }
near-primitives = { path = "./core/primitives" }
near-store = { path = "./core/store" }
runtime-params-estimator = { path = "./runtime/runtime-params-estimator", default_features = false }
near-chain = { path = "./chain/chain" }

node-runtime = { path = "./runtime/runtime" }

near-jsonrpc = { path = "./chain/jsonrpc" }
near-network = { path = "./chain/network" }

libneard = { path = "./neard/lib" }

testlib = { path = "./test-utils/testlib" }

[patch.crates-io]
ethereum-types = { path = "./patches/ethereum-types-0.10.0-to-0.11.0" }

[profile.release]
lto = true        # Enable full link-time optimization.
codegen-units = 1 # Use only 1 codegen-unit to enable full optimizations.
overflow-checks = true

[profile.bench]
lto = true
codegen-units = 1 # Use only 1 codegen-unit to enable full optimizations.
overflow-checks = true

[profile.dev.package.hex]
opt-level = 3 # BLS library is too slow to use in debug

[profile.dev.package.ring]
opt-level = 3 # BLS library is too slow to use in debug

[profile.dev.package.rand]
opt-level = 3 # BLS library is too slow to use in debug

[profile.dev.package.bs58]
opt-level = 3 # bs58 library is too slow to use in debug

[features]
performance_stats = ["libneard/performance_stats", "near-network/performance_stats"]
memory_stats = ["libneard/memory_stats"]
c_memory_stats = ["libneard/c_memory_stats"]
expensive_tests = ["libneard/expensive_tests"]
regression_tests = []
old_tests = []
adversarial = ["libneard/adversarial", "near-jsonrpc/adversarial", "near-store/adversarial"]
no_cache = ["libneard/no_cache"]
metric_recorder = ["libneard/metric_recorder"]
delay_detector = ["libneard/delay_detector"]
rosetta_rpc = ["libneard/rosetta_rpc"]
nightly_protocol = ["near-primitives/nightly_protocol", "near-jsonrpc/nightly_protocol", "testlib/nightly_protocol", "libneard/nightly_protocol"]
nightly_protocol_features = ["nightly_protocol", "libneard/nightly_protocol_features", "protocol_feature_evm", "protocol_feature_block_header_v3", "protocol_feature_alt_bn128", "protocol_feature_add_account_versions", "protocol_feature_tx_size_limit", "protocol_feature_allow_create_account_on_delete", "testlib/nightly_protocol_features"]
protocol_feature_evm = ["libneard/protocol_feature_evm", "testlib/protocol_feature_evm", "runtime-params-estimator/protocol_feature_evm"]
protocol_feature_alt_bn128 = ["libneard/protocol_feature_alt_bn128", "testlib/protocol_feature_alt_bn128", "runtime-params-estimator/protocol_feature_alt_bn128"]
protocol_feature_block_header_v3 = ["near-primitives/protocol_feature_block_header_v3", "near-chain/protocol_feature_block_header_v3", "libneard/protocol_feature_block_header_v3"]
protocol_feature_tx_size_limit = ["near-primitives/protocol_feature_tx_size_limit", "node-runtime/protocol_feature_tx_size_limit", "libneard/protocol_feature_tx_size_limit"]
protocol_feature_allow_create_account_on_delete = ["testlib/protocol_feature_allow_create_account_on_delete", "near-primitives/protocol_feature_allow_create_account_on_delete", "node-runtime/protocol_feature_allow_create_account_on_delete", "libneard/protocol_feature_allow_create_account_on_delete"]
protocol_feature_add_account_versions = ["near-primitives/protocol_feature_add_account_versions"]

# enable this to build neard with wasmer 1.0 runner
# now if none of wasmer0_default, wasmer1_default or wasmtime_default is enabled, wasmer0 would be default
wasmer1_default = ["node-runtime/wasmer1_default"]
wasmer0_default = ["node-runtime/wasmer0_default"]
wasmtime_default = ["node-runtime/wasmtime_default"]
# enable some of these to run runtime tests with wasmer 1.0, 0.x and wasmtime vm enabled
# but would not change default runner used by neard
wasmer1_vm = ["node-runtime/wasmer1_vm"]
wasmer0_vm = ["node-runtime/wasmer0_vm"]
wasmtime_vm = ["node-runtime/wasmtime_vm"]
