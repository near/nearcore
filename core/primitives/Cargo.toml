[package]
name = "near-primitives"
version.workspace = true
authors.workspace = true
edition.workspace = true
description = "This crate provides the base set of primitives used by other nearcore crates"
repository.workspace = true
license.workspace = true
publish = true

[lints]
workspace = true

[dependencies]
arbitrary.workspace = true
base64.workspace = true
bitvec.workspace = true
borsh.workspace = true
bytesize.workspace = true
bytes.workspace = true
cfg-if.workspace = true
chrono.workspace = true
derive_more = { workspace = true, features = ["as_ref", "from", "into", "deref" ] }
easy-ext.workspace = true
hex.workspace = true
itertools = { workspace = true, optional = true }
num-rational.workspace = true
ordered-float.workspace = true
primitive-types.workspace = true
rand = { workspace = true, optional = true }
rand_chacha = { workspace = true, optional = true }
reed-solomon-erasure = { workspace = true, optional = true }
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
sha3.workspace = true
smart-default.workspace = true
stdx.workspace = true
strum.workspace = true
thiserror.workspace = true
tracing.workspace = true
zstd.workspace = true
enum-map.workspace = true

near-time = { workspace = true }
near-crypto.workspace = true
near-fmt.workspace = true
near-primitives-core.workspace = true
near-parameters.workspace = true
near-schema-checker-lib.workspace = true

[features]
sandbox = []
test_features = []
solomon = ["reed-solomon-erasure", "itertools"]
rand = ["dep:rand", "rand_chacha", "near-crypto/rand", "itertools"]
clock = ["near-time/clock", "near-time/serde"]
protocol_feature_fix_contract_loading_cost = [
  "near-primitives-core/protocol_feature_fix_contract_loading_cost",
]
protocol_feature_reject_blocks_with_outdated_protocol_version = [
  "near-primitives-core/protocol_feature_reject_blocks_with_outdated_protocol_version",
]
protocol_feature_nonrefundable_transfer_nep491 = [
  "near-primitives-core/protocol_feature_nonrefundable_transfer_nep491",
]
protocol_feature_relaxed_chunk_validation = [
  "near-primitives-core/protocol_feature_relaxed_chunk_validation",
]

nightly = [
  "near-fmt/nightly",
  "near-parameters/nightly",
  "near-primitives-core/nightly",
  "near-primitives/nightly",
  "nightly_protocol",
  "protocol_feature_fix_contract_loading_cost",
  "protocol_feature_nonrefundable_transfer_nep491",
  "protocol_feature_reject_blocks_with_outdated_protocol_version",
  "protocol_feature_relaxed_chunk_validation",
]

nightly_protocol = [
  "near-fmt/nightly_protocol",
  "near-parameters/nightly_protocol",
  "near-primitives-core/nightly_protocol",
  "near-primitives/nightly_protocol",
]

calimero_zero_storage = []

protocol_schema = [
  "near-schema-checker-lib/protocol_schema",
]

[dev-dependencies]
chrono = { workspace = true, features = ["clock"] }
near-primitives = { workspace = true, features = ["clock", "solomon", "rand"] }
assert_matches.workspace = true
bencher.workspace = true
bolero.workspace = true
insta.workspace = true
expect-test.workspace = true
regex.workspace = true
tempfile.workspace = true


[[bench]]
name = "serialization"
harness = false
