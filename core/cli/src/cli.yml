name: {name}
author: {author}
about: {description}
args:
  - log:
      short: l
      long: log
      value_name: LOG_PATTERN
      help: Sets a custom logging filter
      takes_value: true
  - base-path:
      long: base-path
      short: d
      value_name: PATH
      help: Specify custom base path
      takes_value: true
  - keystore-path:
      long: keystore-path
      value_name: PATH
      help: Specify custom keystore path
      takes_value: true
  - key:
      long: key
      value_name: STRING
      help: Specify additional key seed
      takes_value: true
  - node-key:
      long: node-key
      value_name: KEY
      help: Specify node secret key (64-character hex string)
      takes_value: true
  - validator:
      long: validator
      help: Enable validator mode
      takes_value: false
  - light:
      long: light
      help: Run in light client mode
      takes_value: false
  - dev:
      long: dev
      help: Run in development mode; implies --chain=dev --validator --key Alice
      takes_value: false
  - listen-addr:
      long: listen-addr
      value_name: LISTEN_ADDR
      help: Listen on this multiaddress
      takes_value: true
      multiple: true
  - port:
      long: port
      value_name: PORT
      help: Specify p2p protocol TCP port. Only used if --listen-addr is not specified.
      takes_value: true
  - rpc-external:
      long: rpc-external
      help: Listen to all RPC interfaces (default is local)
      takes_value: false
  - ws-external:
      long: ws-external
      help: Listen to all Websocket interfaces (default is local)
      takes_value: false
  - rpc-port:
      long: rpc-port
      value_name: PORT
      help: Specify HTTP RPC server TCP port
      takes_value: true
  - ws-port:
      long: ws-port
      value_name: PORT
      help: Specify WebSockets RPC server TCP port
      takes_value: true
  - bootnodes:
      long: bootnodes
      value_name: URL
      help: Specify a list of bootnodes
      takes_value: true
      multiple: true
  - reserved-nodes:
      long: reserved-nodes
      value_name: URL
      help: Specify a list of reserved node addresses
      takes_value: true
      multiple: true
  - out-peers:
      long: out-peers
      value_name: OUT_PEERS
      help: Specify the number of outgoing connections we're trying to maintain
      takes_value: true
  - in-peers:
      long: in-peers
      value_name: IN_PEERS
      help: Specify the maximum number of incoming connections we're accepting
      takes_value: true
  - chain:
      long: chain
      value_name: CHAIN_SPEC
      help: Specify the chain specification (one of dev, local or staging)
      takes_value: true
  - pruning:
      long: pruning
      value_name: PRUNING_MODE
      help: Specify the pruning mode, a number of blocks to keep or "archive". Default is 256.
      takes_value: true
  - name:
      long: name
      value_name: NAME
      help: The human-readable name for this node, as reported to the telemetry server, if enabled
      takes_value: true
  - telemetry:
      short: t
      long: telemetry
      help: Should connect to the Substrate telemetry server (telemetry is off by default on local chains)
      takes_value: false
  - no-telemetry:
      long: no-telemetry
      help: Should not connect to the Substrate telemetry server (telemetry is on by default on global chains)
      takes_value: false
  - telemetry-url:
      long: telemetry-url
      value_name: TELEMETRY_URL
      help: The URL of the telemetry server. Implies --telemetry
      takes_value: true
  - execution:
      long: execution
      value_name: STRATEGY
      help: The means of execution used when calling into the runtime. Can be either wasm, native or both.
subcommands:
  - build-spec:
      about: Build a spec.json file, outputing to stdout
      args:
        - raw:
            long: raw
            help: Force raw genesis storage output.
            takes_value: false
        - chain:
            long: chain
            value_name: CHAIN_SPEC
            help: Specify the chain specification (one of dev, local or staging)
            takes_value: true
        - dev:
            long: dev
            help: Specify the development chain
            takes_value: false
  - export-blocks:
      about: Export blocks to a file
      args:
          - OUTPUT:
              index: 1
              help: Output file name or stdout if unspecified.
              required: false
          - chain:
              long: chain
              value_name: CHAIN_SPEC
              help: Specify the chain specification.
              takes_value: true
          - dev:
              long: dev
              help: Specify the development chain
              takes_value: false
          - base-path:
              long: base-path
              short: d
              value_name: PATH
              help: Specify custom base path.
              takes_value: true
          - from:
              long: from
              value_name: BLOCK
              help: Specify starting block number. 1 by default.
              takes_value: true
          - to:
              long: to
              value_name: BLOCK
              help: Specify last block number. Best block by default.
              takes_value: true
          - json:
              long: json
              help: Use JSON output rather than binary.
              takes_value: false
  - import-blocks:
      about: Import blocks from file.
      args:
          - INPUT:
              index: 1
              help: Input file or stdin if unspecified.
              required: false
          - chain:
              long: chain
              value_name: CHAIN_SPEC
              help: Specify the chain specification.
              takes_value: true
          - dev:
              long: dev
              help: Specify the development chain
              takes_value: false
          - base-path:
              long: base-path
              short: d
              value_name: PATH
              help: Specify custom base path.
              takes_value: true
          - execution:
              long: execution
              value_name: STRATEGY
              help: The means of execution used when executing blocks. Can be either wasm, native or both.
          - api-execution:
              long: api-execution
              value_name: STRATEGY
              help: The means of execution used when calling into the runtime. Can be either wasm, native or both.
          - max-heap-pages:
              long: max-heap-pages
              value_name: COUNT
              help: The maximum number of 64KB pages to ever allocate for Wasm execution. Don't alter this unless you know what you're doing.
  - revert:
      about: Revert chain to the previous state
      args:
          - NUM:
              index: 1
              help: Number of blocks to revert. Default is 256.
          - chain:
              long: chain
              value_name: CHAIN_SPEC
              help: Specify the chain specification.
              takes_value: true
          - dev:
              long: dev
              help: Specify the development chain
              takes_value: false
          - base-path:
              long: base-path
              short: d
              value_name: PATH
              help: Specify custom base path.
              takes_value: true
  - purge-chain:
      about: Remove the whole chain data.
      args:
          - chain:
              long: chain
              value_name: CHAIN_SPEC
              help: Specify the chain specification.
              takes_value: true
          - dev:
              long: dev
              help: Specify the development chain
              takes_value: false
          - base-path:
              long: base-path
              short: d
              value_name: PATH
              help: Specify custom base path.
              takes_value: true
