env:
  RUST_BACKTRACE: short

steps:
  - label: "protobuf backward compatibility"
    command: |
      # We need to manually fetch the latest commit of master to
      # correctly compute the commit at which we should diff the proto
      # files. Apparently the pipeline doesn't do that for us.
      git fetch origin
      buf breaking --against ".git#ref=`git merge-base origin/master HEAD`"

    agents:
      - "distro=amazonlinux"
      - "queue=default"

  - label: "sanity checks"
    command: |
      source ~/.cargo/env && set -eux

      cargo build -p neard --bin neard --features nightly
      cd pytest
      python3 -m pip install --progress-bar off --user -r requirements.txt
      python3 tests/sanity/spin_up_cluster.py
      cd ..
      # Note: We're not running spin_up_cluster.py for non-nightly
      # because spinning up non-nightly clusters is already covered
      # by other steps in the CI, e.g. upgradable.

      cargo build -p neard --bin neard
      python3 scripts/state/update_res.py check

      python3 scripts/check_nightly.py
      python3 scripts/check_pytests.py
      python3 scripts/check_fuzzing.py

      python3 scripts/fix_nightly_feature_flags.py

      ./scripts/formatting --check

      rm -f target/rpc_errors_schema.json
      cargo check -p near-jsonrpc --features dump_errors_schema
      if ! git --no-pager diff --no-index chain/jsonrpc/res/rpc_errors_schema.json target/rpc_errors_schema.json; then
          set +x
          echo 'The RPC errors schema reflects outdated typing structure; please run'
          echo '    ./chain/jsonrpc/build_errors_schema.sh'
          exit 1
      fi >&2
    agents:
      - "distro=amazonlinux"
      - "queue=default"
    branches: "!master"

  - label: "backward compatible"
    command: |
      source ~/.cargo/env && set -eux
      cd pytest
      pip3 install --user -r requirements.txt
      pwd
      ls ..
      python3 tests/sanity/backward_compatible.py
      ls ../target/debug
    branches: "!master !beta !stable"
    agents:
      - "distro=amazonlinux"
      - "queue=default"

  - label: "upgradable"
    command: |
      source ~/.cargo/env && set -eux
      cd pytest
      pip3 install --user -r requirements.txt
      python3 tests/sanity/upgradable.py
    branches: "!master"
    agents:
      - "distro=amazonlinux"
      - "queue=default"

  - label: "db migration"
    command: |
      source ~/.cargo/env && set -eux
      cd pytest
      pip3 install --user -r requirements.txt
      python3 tests/sanity/db_migration.py
    branches: "!master !beta !stable"
    agents:
      - "distro=amazonlinux"
      - "queue=default"
