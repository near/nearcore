steps:
  - command: |
      source ~/.cargo/env
      cargo test --locked --workspace
  
    label: "cargo test"
    timeout: 60
    agents:
    - "distro=amazonlinux"
    branches: "!master"
    
  - command: |
      source ~/.cargo/env
      cargo test --workspace --features nightly_protocol,nightly_protocol_features,protocol_feature_evm
  
    label: "cargo test nightly"
    timeout: 60
    agents:
    - "distro=amazonlinux"
    branches: "!master"
  
  - command: |
      source ~/.cargo/env
      set -ex
      rustc --version && cargo --version
      cargo fmt --all -- --check
      if [ -e deny.toml ]; then
        cargo-deny --all-features check bans
      fi
      RUSTFLAGS='-D warnings' cargo check --all --tests --benches --all-features
      python3 scripts/state/update_res.py check
      python3 scripts/check_nightly.py
 
    label: "sanity checks"
    timeout: 30
    agents:
    - "distro=amazonlinux"
    branches: "!master"

  - command: |
      source ~/.cargo/env
      source ~/.nvm/nvm.sh
      source ~/.yarn/yarn.sh
      rustup default nightly-2020-05-15
      rustup target add wasm32-unknown-unknown
      scripts/test_nearlib.sh
  
    label: "nearlib test"
    timeout: 20
    agents:
    - "distro=amazonlinux"
    branches: "!master"

  - command: |
      source ~/.cargo/env
      cd pytest
      pip3 install --user -r requirements.txt
      pwd
      ls ..
      python3 tests/sanity/backward_compatible.py
      ls ../target/debug
  
    branches: "!master !beta !stable"
    timeout: 30
    label: "backward compatible"
    agents:
    - "distro=amazonlinux"

  - command: |
      source ~/.cargo/env
      cd pytest
      pip3 install --user -r requirements.txt
      python3 tests/sanity/upgradable.py
  
    branches: "!master"
    timeout: 30
    label: "upgradable"
    agents:
    - "distro=amazonlinux"
    
  - command: |
      source ~/.cargo/env
      cd pytest
      pip3 install --user -r requirements.txt
      python3 tests/sanity/db_migration.py
  
    branches: "!master !beta !stable"
    timeout: 30
    label: "db migration"
    agents:
    - "distro=amazonlinux"
      
  - command: |
      source ~/.cargo/env
      cd runtime/runtime-params-estimator
      cargo run --release --package neard --bin neard -- --home /tmp/data init --chain-id= --test-seed=alice.near --account-id=test.near --fast
      cargo run --release --package genesis-populate --bin genesis-populate -- --additional-accounts-num=200000 --home /tmp/data
      cargo run --release --package runtime-params-estimator --bin runtime-params-estimator -- --home /tmp/data --accounts-num 20000 --iters 1 --warmup-iters 1 --metric time
  
    label: "runtime params estimate"
    branches: "!master !beta !stable"
    timeout: 60
    agents:
    - "distro=amazonlinux"
    
  #- trigger: "near-sdk-rs"
  #  label: "near-sdk-rs tests"
  #  branches: "!master"
    
  # Disable rainbow bridge tests as they are temporary broken
  # - command: |
  #    source ~/.cargo/env
  #    source ~/.nvm/nvm.sh
      
  #    git clone https://github.com/near/rainbow-bridge
  #    cd rainbow-bridge
  #    source ci/e2e_ci_prepare_env.sh
  #    source ci/e2e_ci_prepare_log.sh
      
  #    LOCAL_CORE_SRC=.. ci/e2e.sh
  
  #  label: "rainbow-bridge test"
  #  timeout: 60
  #  agents:
  #  - "queue=default"
  #  branches: "!master"
  #  artifact_paths:
  #  - "rainbow-bridge/logs/**/*.log"
  
  - command: |
      source ~/.cargo/env
      rm Cargo.lock
      cargo build
  
    label: "cargo release check"
    timeout: 30
    agents:
    - "distro=amazonlinux"
      

  - wait
  
  #- command: |
  #    source ~/.cargo/env
  #    if [[ ${BUILDKITE_COMMIT} == "HEAD" ]]; then
  #      export BUILDKITE_COMMIT=$(git rev-parse HEAD)
  #    fi
  #    python3 scripts/parallel_coverage.py
  #    cat ./merged_coverage/kcov-merged/coverage.json
  #    curl -s https://codecov.io/bash | bash
  
  #  label: "coverage"
  #  key: "coverage"
  #  timeout: 30
  #  agents:
  #  - "distro=amazonlinux"
  #  soft_fail:
  #    - exit_status: 1
  #  branches: "master"
  
  - trigger: nearcore-release
    branches: "master"
    
  - trigger: nearcore-nightly-release
    branches: "master"
