image: parity/rust:nightly-20190315

variables:
    CI_SERVER_NAME:  "GitLab CI"
    CACHE_ROOT: "/tmp/cache/nearcore/${CI_JOB_NAME}"
    CARGO_HOME:  "/tmp/cache/nearcore/${CI_JOB_NAME}/cargo"
    BUILD_TARGET: ubuntu
    BUILD_ARCH: amd64
    CARGO_TARGET: x86_64-unknown-linux-gnu
    APT_CACHE_DIR: apt-cache

.setup_rust: &setup_rust
    rustup default nightly

.setup_cache: &setup_cache
    mkdir -p "${CACHE_ROOT}/target" &&
    ln -s "${CACHE_ROOT}/target" "${CI_PROJECT_DIR}/target"

.install_protos: &install_protos
    sudo apt-get install -y unzip &&
    wget -O /tmp/protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip &&
    sudo unzip /tmp/protoc.zip -d protoc &&
    sudo mv protoc/bin/* /usr/local/bin/ &&
    sudo chmod 755 /usr/local/bin/protoc

.setup_python: &setup_python
    sudo apt-get install -y python-dev

.cleanup_obsolete_cache: &cleanup_obsolete_cache
    find "${CACHE_ROOT}/target" -atime +2 -delete

.code_coverage: &code_coverage
    mkdir -pv $APT_CACHE_DIR && apt-get -qq update &&
    apt-get -qq -o dir::cache::archives="$APT_CACHE_DIR" install -y binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev cmake gcc &&
    ./scripts/coverage.sh

stages:
    - rust
    - libs

cache:
    paths:
        - apt-cache

test_cargo:
    stage: rust
    before_script:
    - *setup_rust
    #- rustup component add clippy
    - *setup_cache
    - *install_protos
    - *setup_python
    - (cd pynear && python setup.py install) # required for tests/test_testnet.rs
    script:
    - rustc --version && cargo --version
    #- ./scripts/run_clippy.sh
    - ./scripts/build_wasm.sh
    - cargo check --all --all-features --tests --benches
    - cargo test --all --verbose
    after_script:
    - *cleanup_obsolete_cache

release_build:
    stage: rust
    before_script:
    - *setup_rust
    - *setup_cache
    - *install_protos
    script:
    - rustc --version && cargo --version
    - cargo build --release --package=devnet
    after_script:
    - *cleanup_obsolete_cache
    artifacts:
        paths:
            - target/release/devnet

coverage:
    stage: libs
    before_script:
    - *setup_rust
    - *setup_cache
    - *install_protos
    script:
    - ./scripts/build_wasm.sh
    - cargo test --all --no-run
    - *code_coverage

test_nearlib:
    stage: libs
    dependencies:
    - release_build
    script:
    - ./scripts/test_nearlib.sh

test_pynear:
    stage: libs
    before_script:
        - *install_protos
        - *setup_python
    dependencies:
        - release_build
    script:
    - export NEAR_DEVNET_EXE=../target/release/devnet
    - cd pynear && python setup.py test
