stages:
    - test
    - release

variables:
    CACHE_ROOT: "/opt/nearcore"

.setup_cache: &setup_cache
    mkdir -p "${CACHE_ROOT}/target" &&
    ln -s "${CACHE_ROOT}/target" "${CI_PROJECT_DIR}/target"

# Test all but expensive integration tests.
test_cargo:
    stage: test
    tags:
    - shell
    before_script:
    - *setup_cache
    script:
    - rustc --version && cargo --version
    - cargo fmt --all -- --check
    - cargo check --all --tests --benches --all-features
    - bash -c 'timeout 60m python3 scripts/parallel_run_tests.py'

# Regression tests.
test_regression:
    stage: test
    before_script:
    - *setup_cache
    script:
    - rustc --version && cargo --version
    - ./scripts/build_wasm.sh
    - cargo test --package nearcore --test test_tps_regression test --features "regression_tests,fake_crypto"
    tags:
    - shell
    - regression_tests
    only:
    - schedules

# A set of expensive tests.
test_cases_testnet_rpc:
    stage: test
    before_script:
    - *setup_cache
    script:
    - rustc --version && cargo --version
    - ./scripts/build_wasm.sh
    - cargo test --package nearcore --test test_cases_testnet_rpc test --features "expensive_tests"
    tags:
    - shell
    - expensive_tests
    only:
    - schedules

test_nearlib:
    stage: test
    tags:
    - shell
    before_script:
    - *setup_cache
    script:
    - ./scripts/test_nearlib.sh

coverage:
    stage: test
    tags:
    - shell
    before_script:
    - *setup_cache
    script:
    - ./scripts/build_wasm.sh
    - bash -c 'timeout 60m python3 scripts/parallel_coverage.py'
    - (curl -s https://codecov.io/bash | bash) || true
    only:
    - staging
    - master

test_nearlib_release:
    stage: test
    tags:
    - shell
    before_script:
    - *setup_cache
    script:
    - export NEARLIB_RELEASE=true
    - ./scripts/test_nearlib.sh
    only:
    - schedules
    # TODO: "only: branch" doesn't work, gitlab bot sync PR as branch, lost info of which branch
    # the PR is going to merge with. Before fix in bot, keep different version of .gitlab-ci.yml 
    # in staging and master.
    # - master 

release_build:
    stage: release
    tags:
    - shell
    before_script:
    - *setup_cache
    script:
    - cargo build -p near
    - cargo build --release -p near
    - ./scripts/upload_release.sh
    only:
    - staging
    - master