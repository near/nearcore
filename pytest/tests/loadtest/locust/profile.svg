<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="570" onload="init(evt)" viewBox="0 0 1200 570" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="570" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">/home/akashin/.pyenv/versions/near-3.11/bin/py-spy record -o profile.svg -- locust -H 127.0.0.1:3030 -f locustfiles/ft.py --funding-key=/home/akashin/.near/localnet/node0/validator_key.json --headless -u 600 -r 50</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="559.00"> </text><svg id="frames" x="10" width="1180" total_samples="81660"><g><title>run (gevent/hub.py:647) (1,122 samples, 1.37%)</title><rect x="0.1249%" y="68" width="1.3740%" height="15" fill="rgb(227,0,7)" fg:x="102" fg:w="1122"/><text x="0.3749%" y="78.50"></text></g><g><title>run (gevent/threadpool.py:195) (49,014 samples, 60.02%)</title><rect x="1.5013%" y="68" width="60.0220%" height="15" fill="rgb(217,0,24)" fg:x="1226" fg:w="49014"/><text x="1.7513%" y="78.50">run (gevent/threadpool.py:195)</text></g><g><title>get (gevent/_threading.py:207) (49,013 samples, 60.02%)</title><rect x="1.5026%" y="84" width="60.0208%" height="15" fill="rgb(221,193,54)" fg:x="1227" fg:w="49013"/><text x="1.7526%" y="94.50">get (gevent/_threading.py:207)</text></g><g><title>wait (gevent/_threading.py:86) (49,013 samples, 60.02%)</title><rect x="1.5026%" y="100" width="60.0208%" height="15" fill="rgb(248,212,6)" fg:x="1227" fg:w="49013"/><text x="1.7526%" y="110.50">wait (gevent/_threading.py:86)</text></g><g><title>acquire_with_timeout (gevent/_threading.py:36) (49,012 samples, 60.02%)</title><rect x="1.5038%" y="116" width="60.0196%" height="15" fill="rgb(208,68,35)" fg:x="1228" fg:w="49012"/><text x="1.7538%" y="126.50">acquire_with_timeout (gevent/_threading.py:36)</text></g><g><title>__run_task (gevent/threadpool.py:173) (130 samples, 0.16%)</title><rect x="61.5234%" y="84" width="0.1592%" height="15" fill="rgb(232,128,0)" fg:x="50240" fg:w="130"/><text x="61.7734%" y="94.50"></text></g><g><title>run (gevent/threadpool.py:206) (135 samples, 0.17%)</title><rect x="61.5234%" y="68" width="0.1653%" height="15" fill="rgb(207,160,47)" fg:x="50240" fg:w="135"/><text x="61.7734%" y="78.50"></text></g><g><title>on_start (base.py:555) (123 samples, 0.15%)</title><rect x="61.7867%" y="116" width="0.1506%" height="15" fill="rgb(228,23,34)" fg:x="50455" fg:w="123"/><text x="62.0367%" y="126.50"></text></g><g><title>send_tx_retry (base.py:579) (123 samples, 0.15%)</title><rect x="61.7867%" y="132" width="0.1506%" height="15" fill="rgb(218,30,26)" fg:x="50455" fg:w="123"/><text x="62.0367%" y="142.50"></text></g><g><title>send_tx_retry (base.py:254) (123 samples, 0.15%)</title><rect x="61.7867%" y="148" width="0.1506%" height="15" fill="rgb(220,122,19)" fg:x="50455" fg:w="123"/><text x="62.0367%" y="158.50"></text></g><g><title>on_start (ft.py:34) (265 samples, 0.32%)</title><rect x="61.6924%" y="100" width="0.3245%" height="15" fill="rgb(250,228,42)" fg:x="50378" fg:w="265"/><text x="61.9424%" y="110.50"></text></g><g><title>run (locust/user/users.py:150) (467 samples, 0.57%)</title><rect x="61.6924%" y="84" width="0.5719%" height="15" fill="rgb(240,193,28)" fg:x="50378" fg:w="467"/><text x="61.9424%" y="94.50"></text></g><g><title>on_start (ft.py:36) (202 samples, 0.25%)</title><rect x="62.0169%" y="100" width="0.2474%" height="15" fill="rgb(216,20,37)" fg:x="50643" fg:w="202"/><text x="62.2669%" y="110.50"></text></g><g><title>register_user (ft.py:44) (124 samples, 0.15%)</title><rect x="62.1124%" y="116" width="0.1518%" height="15" fill="rgb(206,188,39)" fg:x="50721" fg:w="124"/><text x="62.3624%" y="126.50"></text></g><g><title>send_tx_retry (base.py:579) (124 samples, 0.15%)</title><rect x="62.1124%" y="132" width="0.1518%" height="15" fill="rgb(217,207,13)" fg:x="50721" fg:w="124"/><text x="62.3624%" y="142.50"></text></g><g><title>send_tx_retry (base.py:254) (124 samples, 0.15%)</title><rect x="62.1124%" y="148" width="0.1518%" height="15" fill="rgb(231,73,38)" fg:x="50721" fg:w="124"/><text x="62.3624%" y="158.50"></text></g><g><title>seed (random.py:163) (211 samples, 0.26%)</title><rect x="62.3671%" y="212" width="0.2584%" height="15" fill="rgb(225,20,46)" fg:x="50929" fg:w="211"/><text x="62.6171%" y="222.50"></text></g><g><title>__init__ (random.py:125) (233 samples, 0.29%)</title><rect x="62.3488%" y="196" width="0.2853%" height="15" fill="rgb(210,31,41)" fg:x="50914" fg:w="233"/><text x="62.5988%" y="206.50"></text></g><g><title>random_receivers (ft.py:63) (242 samples, 0.30%)</title><rect x="62.3414%" y="180" width="0.2964%" height="15" fill="rgb(221,200,47)" fg:x="50908" fg:w="242"/><text x="62.5914%" y="190.50"></text></g><g><title>random_receivers (ft.py:64) (132 samples, 0.16%)</title><rect x="62.6378%" y="180" width="0.1616%" height="15" fill="rgb(226,26,5)" fg:x="51150" fg:w="132"/><text x="62.8878%" y="190.50"></text></g><g><title>ft_transfer (ft.py:29) (424 samples, 0.52%)</title><rect x="62.3267%" y="148" width="0.5192%" height="15" fill="rgb(249,33,26)" fg:x="50896" fg:w="424"/><text x="62.5767%" y="158.50"></text></g><g><title>random_receiver (ft.py:60) (423 samples, 0.52%)</title><rect x="62.3279%" y="164" width="0.5180%" height="15" fill="rgb(235,183,28)" fg:x="50897" fg:w="423"/><text x="62.5779%" y="174.50"></text></g><g><title>b58decode (base58/__init__.py:124) (84 samples, 0.10%)</title><rect x="63.1178%" y="212" width="0.1029%" height="15" fill="rgb(221,5,38)" fg:x="51542" fg:w="84"/><text x="63.3678%" y="222.50"></text></g><g><title>final_block_hash (base.py:363) (201 samples, 0.25%)</title><rect x="63.0725%" y="196" width="0.2461%" height="15" fill="rgb(247,18,42)" fg:x="51505" fg:w="201"/><text x="63.3225%" y="206.50"></text></g><g><title>__enter__ (threading.py:272) (92 samples, 0.11%)</title><rect x="63.7423%" y="276" width="0.1127%" height="15" fill="rgb(241,131,45)" fg:x="52052" fg:w="92"/><text x="63.9923%" y="286.50"></text></g><g><title>get (queue.py:165) (183 samples, 0.22%)</title><rect x="63.6946%" y="260" width="0.2241%" height="15" fill="rgb(249,31,29)" fg:x="52013" fg:w="183"/><text x="63.9446%" y="270.50"></text></g><g><title>acquire (gevent/thread.py:132) (175 samples, 0.21%)</title><rect x="64.0681%" y="308" width="0.2143%" height="15" fill="rgb(225,111,53)" fg:x="52318" fg:w="175"/><text x="64.3181%" y="318.50"></text></g><g><title>sleep (gevent/hub.py:159) (97 samples, 0.12%)</title><rect x="64.1636%" y="324" width="0.1188%" height="15" fill="rgb(238,160,17)" fg:x="52396" fg:w="97"/><text x="64.4136%" y="334.50"></text></g><g><title>_is_owned (threading.py:289) (230 samples, 0.28%)</title><rect x="64.0032%" y="292" width="0.2817%" height="15" fill="rgb(214,148,48)" fg:x="52265" fg:w="230"/><text x="64.2532%" y="302.50"></text></g><g><title>notify (threading.py:376) (238 samples, 0.29%)</title><rect x="63.9946%" y="276" width="0.2915%" height="15" fill="rgb(232,36,49)" fg:x="52258" fg:w="238"/><text x="64.2446%" y="286.50"></text></g><g><title>_close_pool_connections (urllib3/connectionpool.py:1133) (515 samples, 0.63%)</title><rect x="63.6689%" y="244" width="0.6307%" height="15" fill="rgb(209,103,24)" fg:x="51992" fg:w="515"/><text x="63.9189%" y="254.50"></text></g><g><title>get (queue.py:182) (253 samples, 0.31%)</title><rect x="63.9897%" y="260" width="0.3098%" height="15" fill="rgb(229,88,8)" fg:x="52254" fg:w="253"/><text x="64.2397%" y="270.50"></text></g><g><title>_drop_events_and_close (gevent/_socketcommon.py:466) (128 samples, 0.16%)</title><rect x="64.3742%" y="324" width="0.1567%" height="15" fill="rgb(213,181,19)" fg:x="52568" fg:w="128"/><text x="64.6242%" y="334.50"></text></g><g><title>_drop_ref_on_close (gevent/_socket3.py:286) (110 samples, 0.13%)</title><rect x="64.3963%" y="340" width="0.1347%" height="15" fill="rgb(254,191,54)" fg:x="52586" fg:w="110"/><text x="64.6463%" y="350.50"></text></g><g><title>_detach_socket (gevent/_socket3.py:315) (140 samples, 0.17%)</title><rect x="64.3608%" y="308" width="0.1714%" height="15" fill="rgb(241,83,37)" fg:x="52557" fg:w="140"/><text x="64.6108%" y="318.50"></text></g><g><title>close (http/client.py:981) (162 samples, 0.20%)</title><rect x="64.3363%" y="260" width="0.1984%" height="15" fill="rgb(233,36,39)" fg:x="52537" fg:w="162"/><text x="64.5863%" y="270.50"></text></g><g><title>close (gevent/_socket3.py:331) (159 samples, 0.19%)</title><rect x="64.3399%" y="276" width="0.1947%" height="15" fill="rgb(226,3,54)" fg:x="52540" fg:w="159"/><text x="64.5899%" y="286.50"></text></g><g><title>_real_close (gevent/_socket3.py:324) (151 samples, 0.18%)</title><rect x="64.3497%" y="292" width="0.1849%" height="15" fill="rgb(245,192,40)" fg:x="52548" fg:w="151"/><text x="64.5997%" y="302.50"></text></g><g><title>_close_pool_connections (urllib3/connectionpool.py:1135) (206 samples, 0.25%)</title><rect x="64.3020%" y="244" width="0.2523%" height="15" fill="rgb(238,167,29)" fg:x="52509" fg:w="206"/><text x="64.5520%" y="254.50"></text></g><g><title>__call__ (weakref.py:590) (741 samples, 0.91%)</title><rect x="63.6603%" y="228" width="0.9074%" height="15" fill="rgb(232,182,51)" fg:x="51985" fg:w="741"/><text x="63.9103%" y="238.50"></text></g><g><title>close (requests/adapters.py:366) (103 samples, 0.13%)</title><rect x="64.7673%" y="308" width="0.1261%" height="15" fill="rgb(231,60,39)" fg:x="52889" fg:w="103"/><text x="65.0173%" y="318.50"></text></g><g><title>clear (urllib3/poolmanager.py:223) (101 samples, 0.12%)</title><rect x="64.7698%" y="324" width="0.1237%" height="15" fill="rgb(208,69,12)" fg:x="52891" fg:w="101"/><text x="65.0198%" y="334.50"></text></g><g><title>__exit__ (requests/sessions.py:457) (126 samples, 0.15%)</title><rect x="64.7453%" y="276" width="0.1543%" height="15" fill="rgb(235,93,37)" fg:x="52871" fg:w="126"/><text x="64.9953%" y="286.50"></text></g><g><title>close (requests/sessions.py:799) (111 samples, 0.14%)</title><rect x="64.7637%" y="292" width="0.1359%" height="15" fill="rgb(213,116,39)" fg:x="52886" fg:w="111"/><text x="65.0137%" y="302.50"></text></g><g><title>default_headers (requests/utils.py:902) (134 samples, 0.16%)</title><rect x="64.9057%" y="292" width="0.1641%" height="15" fill="rgb(222,207,29)" fg:x="53002" fg:w="134"/><text x="65.1557%" y="302.50"></text></g><g><title>__init__ (requests/structures.py:44) (105 samples, 0.13%)</title><rect x="64.9412%" y="308" width="0.1286%" height="15" fill="rgb(206,96,30)" fg:x="53031" fg:w="105"/><text x="65.1912%" y="318.50"></text></g><g><title>__init__ (requests/sessions.py:396) (192 samples, 0.24%)</title><rect x="64.8996%" y="276" width="0.2351%" height="15" fill="rgb(218,138,4)" fg:x="52997" fg:w="192"/><text x="65.1496%" y="286.50"></text></g><g><title>cookiejar_from_dict (requests/cookies.py:531) (97 samples, 0.12%)</title><rect x="65.1567%" y="292" width="0.1188%" height="15" fill="rgb(250,191,14)" fg:x="53207" fg:w="97"/><text x="65.4067%" y="302.50"></text></g><g><title>__init__ (requests/sessions.py:446) (158 samples, 0.19%)</title><rect x="65.1506%" y="276" width="0.1935%" height="15" fill="rgb(239,60,40)" fg:x="53202" fg:w="158"/><text x="65.4006%" y="286.50"></text></g><g><title>__init__ (urllib3/poolmanager.py:174) (148 samples, 0.18%)</title><rect x="65.5511%" y="324" width="0.1812%" height="15" fill="rgb(206,27,48)" fg:x="53529" fg:w="148"/><text x="65.8011%" y="334.50"></text></g><g><title>__init__ (urllib3/_collections.py:52) (125 samples, 0.15%)</title><rect x="65.5792%" y="340" width="0.1531%" height="15" fill="rgb(225,35,8)" fg:x="53552" fg:w="125"/><text x="65.8292%" y="350.50"></text></g><g><title>RLock (threading.py:100) (112 samples, 0.14%)</title><rect x="65.5952%" y="356" width="0.1372%" height="15" fill="rgb(250,213,24)" fg:x="53565" fg:w="112"/><text x="65.8452%" y="366.50"></text></g><g><title>__init__ (threading.py:114) (90 samples, 0.11%)</title><rect x="65.6221%" y="372" width="0.1102%" height="15" fill="rgb(247,123,22)" fg:x="53587" fg:w="90"/><text x="65.8721%" y="382.50"></text></g><g><title>__init__ (requests/adapters.py:155) (194 samples, 0.24%)</title><rect x="65.4984%" y="292" width="0.2376%" height="15" fill="rgb(231,138,38)" fg:x="53486" fg:w="194"/><text x="65.7484%" y="302.50"></text></g><g><title>init_poolmanager (requests/adapters.py:192) (188 samples, 0.23%)</title><rect x="65.5058%" y="308" width="0.2302%" height="15" fill="rgb(231,145,46)" fg:x="53492" fg:w="188"/><text x="65.7558%" y="318.50"></text></g><g><title>__init__ (requests/sessions.py:450) (342 samples, 0.42%)</title><rect x="65.3527%" y="276" width="0.4188%" height="15" fill="rgb(251,118,11)" fg:x="53367" fg:w="342"/><text x="65.6027%" y="286.50"></text></g><g><title>RLock (threading.py:100) (88 samples, 0.11%)</title><rect x="65.9037%" y="356" width="0.1078%" height="15" fill="rgb(217,147,25)" fg:x="53817" fg:w="88"/><text x="66.1537%" y="366.50"></text></g><g><title>__init__ (urllib3/poolmanager.py:174) (117 samples, 0.14%)</title><rect x="65.8695%" y="324" width="0.1433%" height="15" fill="rgb(247,81,37)" fg:x="53789" fg:w="117"/><text x="66.1195%" y="334.50"></text></g><g><title>__init__ (urllib3/_collections.py:52) (98 samples, 0.12%)</title><rect x="65.8927%" y="340" width="0.1200%" height="15" fill="rgb(209,12,38)" fg:x="53808" fg:w="98"/><text x="66.1427%" y="350.50"></text></g><g><title>init_poolmanager (requests/adapters.py:192) (133 samples, 0.16%)</title><rect x="65.8511%" y="308" width="0.1629%" height="15" fill="rgb(227,1,9)" fg:x="53774" fg:w="133"/><text x="66.1011%" y="318.50"></text></g><g><title>__init__ (requests/adapters.py:155) (140 samples, 0.17%)</title><rect x="65.8450%" y="292" width="0.1714%" height="15" fill="rgb(248,47,43)" fg:x="53769" fg:w="140"/><text x="66.0950%" y="302.50"></text></g><g><title>request (requests/api.py:58) (1,069 samples, 1.31%)</title><rect x="64.7245%" y="260" width="1.3091%" height="15" fill="rgb(221,10,30)" fg:x="52854" fg:w="1069"/><text x="64.9745%" y="270.50"></text></g><g><title>__init__ (requests/sessions.py:451) (214 samples, 0.26%)</title><rect x="65.7715%" y="276" width="0.2621%" height="15" fill="rgb(210,229,1)" fg:x="53709" fg:w="214"/><text x="66.0215%" y="286.50"></text></g><g><title>request (requests/sessions.py:563) (95 samples, 0.12%)</title><rect x="66.0874%" y="276" width="0.1163%" height="15" fill="rgb(222,148,37)" fg:x="53967" fg:w="95"/><text x="66.3374%" y="286.50"></text></g><g><title>RLock (threading.py:100) (104 samples, 0.13%)</title><rect x="66.2491%" y="340" width="0.1274%" height="15" fill="rgb(234,67,33)" fg:x="54099" fg:w="104"/><text x="66.4991%" y="350.50"></text></g><g><title>__init__ (threading.py:114) (89 samples, 0.11%)</title><rect x="66.2675%" y="356" width="0.1090%" height="15" fill="rgb(247,98,35)" fg:x="54114" fg:w="89"/><text x="66.5175%" y="366.50"></text></g><g><title>cookiejar_from_dict (requests/cookies.py:531) (114 samples, 0.14%)</title><rect x="66.2381%" y="308" width="0.1396%" height="15" fill="rgb(247,138,52)" fg:x="54090" fg:w="114"/><text x="66.4881%" y="318.50"></text></g><g><title>__init__ (http/cookiejar.py:1266) (105 samples, 0.13%)</title><rect x="66.2491%" y="324" width="0.1286%" height="15" fill="rgb(213,79,30)" fg:x="54099" fg:w="105"/><text x="66.4991%" y="334.50"></text></g><g><title>prepare_request (requests/sessions.py:473) (174 samples, 0.21%)</title><rect x="66.2319%" y="292" width="0.2131%" height="15" fill="rgb(246,177,23)" fg:x="54085" fg:w="174"/><text x="66.4819%" y="302.50"></text></g><g><title>__init__ (http/cookiejar.py:1266) (84 samples, 0.10%)</title><rect x="66.4805%" y="308" width="0.1029%" height="15" fill="rgb(230,62,27)" fg:x="54288" fg:w="84"/><text x="66.7305%" y="318.50"></text></g><g><title>RLock (threading.py:100) (84 samples, 0.10%)</title><rect x="66.4805%" y="324" width="0.1029%" height="15" fill="rgb(216,154,8)" fg:x="54288" fg:w="84"/><text x="66.7305%" y="334.50"></text></g><g><title>prepare_request (requests/sessions.py:477) (170 samples, 0.21%)</title><rect x="66.4671%" y="292" width="0.2082%" height="15" fill="rgb(244,35,45)" fg:x="54277" fg:w="170"/><text x="66.7171%" y="302.50"></text></g><g><title>get (&lt;frozen _collections_abc&gt;:774) (156 samples, 0.19%)</title><rect x="66.6961%" y="324" width="0.1910%" height="15" fill="rgb(251,115,12)" fg:x="54464" fg:w="156"/><text x="66.9461%" y="334.50"></text></g><g><title>get_netrc_auth (requests/utils.py:202) (169 samples, 0.21%)</title><rect x="66.6887%" y="308" width="0.2070%" height="15" fill="rgb(240,54,50)" fg:x="54458" fg:w="169"/><text x="66.9387%" y="318.50"></text></g><g><title>get_netrc_auth (requests/utils.py:215) (86 samples, 0.11%)</title><rect x="66.9863%" y="308" width="0.1053%" height="15" fill="rgb(233,84,52)" fg:x="54701" fg:w="86"/><text x="67.2363%" y="318.50"></text></g><g><title>get_netrc_auth (requests/utils.py:222) (93 samples, 0.11%)</title><rect x="67.0916%" y="308" width="0.1139%" height="15" fill="rgb(207,117,47)" fg:x="54787" fg:w="93"/><text x="67.3416%" y="318.50"></text></g><g><title>prepare_request (requests/sessions.py:483) (434 samples, 0.53%)</title><rect x="66.6752%" y="292" width="0.5315%" height="15" fill="rgb(249,43,39)" fg:x="54447" fg:w="434"/><text x="66.9252%" y="302.50"></text></g><g><title>prepare_url (requests/models.py:434) (194 samples, 0.24%)</title><rect x="67.2790%" y="324" width="0.2376%" height="15" fill="rgb(209,38,44)" fg:x="54940" fg:w="194"/><text x="67.5290%" y="334.50"></text></g><g><title>prepare (requests/models.py:368) (413 samples, 0.51%)</title><rect x="67.2520%" y="308" width="0.5058%" height="15" fill="rgb(236,212,23)" fg:x="54918" fg:w="413"/><text x="67.5020%" y="318.50"></text></g><g><title>prepare_url (requests/models.py:481) (120 samples, 0.15%)</title><rect x="67.6108%" y="324" width="0.1470%" height="15" fill="rgb(242,79,21)" fg:x="55211" fg:w="120"/><text x="67.8608%" y="334.50"></text></g><g><title>prepare (requests/models.py:369) (259 samples, 0.32%)</title><rect x="67.7578%" y="308" width="0.3172%" height="15" fill="rgb(211,96,35)" fg:x="55331" fg:w="259"/><text x="68.0078%" y="318.50"></text></g><g><title>get_cookie_header (requests/cookies.py:147) (143 samples, 0.18%)</title><rect x="68.1839%" y="340" width="0.1751%" height="15" fill="rgb(253,215,40)" fg:x="55679" fg:w="143"/><text x="68.4339%" y="350.50"></text></g><g><title>prepare_cookies (requests/models.py:627) (230 samples, 0.28%)</title><rect x="68.0811%" y="324" width="0.2817%" height="15" fill="rgb(211,81,21)" fg:x="55595" fg:w="230"/><text x="68.3311%" y="334.50"></text></g><g><title>prepare (requests/models.py:370) (236 samples, 0.29%)</title><rect x="68.0749%" y="308" width="0.2890%" height="15" fill="rgb(208,190,38)" fg:x="55590" fg:w="236"/><text x="68.3249%" y="318.50"></text></g><g><title>encode (json/encoder.py:200) (98 samples, 0.12%)</title><rect x="68.4350%" y="356" width="0.1200%" height="15" fill="rgb(235,213,38)" fg:x="55884" fg:w="98"/><text x="68.6850%" y="366.50"></text></g><g><title>prepare_body (requests/models.py:511) (154 samples, 0.19%)</title><rect x="68.3676%" y="324" width="0.1886%" height="15" fill="rgb(237,122,38)" fg:x="55829" fg:w="154"/><text x="68.6176%" y="334.50"></text></g><g><title>dumps (json/__init__.py:238) (109 samples, 0.13%)</title><rect x="68.4227%" y="340" width="0.1335%" height="15" fill="rgb(244,218,35)" fg:x="55874" fg:w="109"/><text x="68.6727%" y="350.50"></text></g><g><title>prepare (requests/models.py:371) (276 samples, 0.34%)</title><rect x="68.3639%" y="308" width="0.3380%" height="15" fill="rgb(240,68,47)" fg:x="55826" fg:w="276"/><text x="68.6139%" y="318.50"></text></g><g><title>prepare_auth (requests/models.py:594) (82 samples, 0.10%)</title><rect x="68.7032%" y="324" width="0.1004%" height="15" fill="rgb(210,16,53)" fg:x="56103" fg:w="82"/><text x="68.9532%" y="334.50"></text></g><g><title>prepare (requests/models.py:372) (94 samples, 0.12%)</title><rect x="68.7019%" y="308" width="0.1151%" height="15" fill="rgb(235,124,12)" fg:x="56102" fg:w="94"/><text x="68.9519%" y="318.50"></text></g><g><title>prepare_request (requests/sessions.py:486) (1,344 samples, 1.65%)</title><rect x="67.2263%" y="292" width="1.6458%" height="15" fill="rgb(224,169,11)" fg:x="54897" fg:w="1344"/><text x="67.4763%" y="302.50"></text></g><g><title>merge_setting (requests/sessions.py:79) (154 samples, 0.19%)</title><rect x="68.8942%" y="308" width="0.1886%" height="15" fill="rgb(250,166,2)" fg:x="56259" fg:w="154"/><text x="69.1442%" y="318.50"></text></g><g><title>merge_setting (requests/sessions.py:84) (86 samples, 0.11%)</title><rect x="69.1207%" y="308" width="0.1053%" height="15" fill="rgb(242,216,29)" fg:x="56444" fg:w="86"/><text x="69.3707%" y="318.50"></text></g><g><title>prepare_request (requests/sessions.py:492) (289 samples, 0.35%)</title><rect x="68.8734%" y="292" width="0.3539%" height="15" fill="rgb(230,116,27)" fg:x="56242" fg:w="289"/><text x="69.1234%" y="302.50"></text></g><g><title>request (requests/sessions.py:575) (2,551 samples, 3.12%)</title><rect x="66.2099%" y="276" width="3.1239%" height="15" fill="rgb(228,99,48)" fg:x="54067" fg:w="2551"/><text x="66.4599%" y="286.50">req..</text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (182 samples, 0.22%)</title><rect x="69.6841%" y="372" width="0.2229%" height="15" fill="rgb(253,11,6)" fg:x="56904" fg:w="182"/><text x="69.9341%" y="382.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (128 samples, 0.16%)</title><rect x="69.7502%" y="388" width="0.1567%" height="15" fill="rgb(247,143,39)" fg:x="56958" fg:w="128"/><text x="70.0002%" y="398.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (171 samples, 0.21%)</title><rect x="70.0037%" y="388" width="0.2094%" height="15" fill="rgb(236,97,10)" fg:x="57165" fg:w="171"/><text x="70.2537%" y="398.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (369 samples, 0.45%)</title><rect x="69.9069%" y="372" width="0.4519%" height="15" fill="rgb(233,208,19)" fg:x="57086" fg:w="369"/><text x="70.1569%" y="382.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (117 samples, 0.14%)</title><rect x="70.2155%" y="388" width="0.1433%" height="15" fill="rgb(216,164,2)" fg:x="57338" fg:w="117"/><text x="70.4655%" y="398.50"></text></g><g><title>getproxies_environment (urllib/request.py:2511) (618 samples, 0.76%)</title><rect x="69.6118%" y="356" width="0.7568%" height="15" fill="rgb(220,129,5)" fg:x="56845" fg:w="618"/><text x="69.8618%" y="366.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (167 samples, 0.20%)</title><rect x="70.6111%" y="372" width="0.2045%" height="15" fill="rgb(242,17,10)" fg:x="57661" fg:w="167"/><text x="70.8611%" y="382.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (121 samples, 0.15%)</title><rect x="70.6674%" y="388" width="0.1482%" height="15" fill="rgb(242,107,0)" fg:x="57707" fg:w="121"/><text x="70.9174%" y="398.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (175 samples, 0.21%)</title><rect x="70.9001%" y="388" width="0.2143%" height="15" fill="rgb(251,28,31)" fg:x="57897" fg:w="175"/><text x="71.1501%" y="398.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (376 samples, 0.46%)</title><rect x="70.8156%" y="372" width="0.4604%" height="15" fill="rgb(233,223,10)" fg:x="57828" fg:w="376"/><text x="71.0656%" y="382.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (128 samples, 0.16%)</title><rect x="71.1193%" y="388" width="0.1567%" height="15" fill="rgb(215,21,27)" fg:x="58076" fg:w="128"/><text x="71.3693%" y="398.50"></text></g><g><title>getproxies_environment (urllib/request.py:2521) (610 samples, 0.75%)</title><rect x="70.5364%" y="356" width="0.7470%" height="15" fill="rgb(232,23,21)" fg:x="57600" fg:w="610"/><text x="70.7864%" y="366.50"></text></g><g><title>proxy_bypass_environment (urllib/request.py:2538) (1,434 samples, 1.76%)</title><rect x="69.6057%" y="340" width="1.7561%" height="15" fill="rgb(244,5,23)" fg:x="56840" fg:w="1434"/><text x="69.8557%" y="350.50"></text></g><g><title>should_bypass_proxies (requests/utils.py:814) (1,456 samples, 1.78%)</title><rect x="69.5885%" y="324" width="1.7830%" height="15" fill="rgb(226,81,46)" fg:x="56826" fg:w="1456"/><text x="69.8385%" y="334.50">s..</text></g><g><title>get_environ_proxies (requests/utils.py:830) (1,657 samples, 2.03%)</title><rect x="69.3461%" y="308" width="2.0291%" height="15" fill="rgb(247,70,30)" fg:x="56628" fg:w="1657"/><text x="69.5961%" y="318.50">g..</text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (186 samples, 0.23%)</title><rect x="71.4450%" y="340" width="0.2278%" height="15" fill="rgb(212,68,19)" fg:x="58342" fg:w="186"/><text x="71.6950%" y="350.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (139 samples, 0.17%)</title><rect x="71.5026%" y="356" width="0.1702%" height="15" fill="rgb(240,187,13)" fg:x="58389" fg:w="139"/><text x="71.7526%" y="366.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (184 samples, 0.23%)</title><rect x="71.7512%" y="356" width="0.2253%" height="15" fill="rgb(223,113,26)" fg:x="58592" fg:w="184"/><text x="72.0012%" y="366.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (361 samples, 0.44%)</title><rect x="71.6728%" y="340" width="0.4421%" height="15" fill="rgb(206,192,2)" fg:x="58528" fg:w="361"/><text x="71.9228%" y="350.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (111 samples, 0.14%)</title><rect x="71.9789%" y="356" width="0.1359%" height="15" fill="rgb(241,108,4)" fg:x="58778" fg:w="111"/><text x="72.2289%" y="366.50"></text></g><g><title>getproxies_environment (urllib/request.py:2511) (606 samples, 0.74%)</title><rect x="71.3764%" y="324" width="0.7421%" height="15" fill="rgb(247,173,49)" fg:x="58286" fg:w="606"/><text x="71.6264%" y="334.50"></text></g><g><title>getproxies_environment (urllib/request.py:2513) (89 samples, 0.11%)</title><rect x="72.1577%" y="324" width="0.1090%" height="15" fill="rgb(224,114,35)" fg:x="58924" fg:w="89"/><text x="72.4077%" y="334.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (164 samples, 0.20%)</title><rect x="72.3708%" y="340" width="0.2008%" height="15" fill="rgb(245,159,27)" fg:x="59098" fg:w="164"/><text x="72.6208%" y="350.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (128 samples, 0.16%)</title><rect x="72.4149%" y="356" width="0.1567%" height="15" fill="rgb(245,172,44)" fg:x="59134" fg:w="128"/><text x="72.6649%" y="366.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (180 samples, 0.22%)</title><rect x="72.6574%" y="356" width="0.2204%" height="15" fill="rgb(236,23,11)" fg:x="59332" fg:w="180"/><text x="72.9074%" y="366.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (376 samples, 0.46%)</title><rect x="72.5716%" y="340" width="0.4604%" height="15" fill="rgb(205,117,38)" fg:x="59262" fg:w="376"/><text x="72.8216%" y="350.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (119 samples, 0.15%)</title><rect x="72.8864%" y="356" width="0.1457%" height="15" fill="rgb(237,72,25)" fg:x="59519" fg:w="119"/><text x="73.1364%" y="366.50"></text></g><g><title>getproxies_environment (urllib/request.py:2521) (585 samples, 0.72%)</title><rect x="72.3169%" y="324" width="0.7164%" height="15" fill="rgb(244,70,9)" fg:x="59054" fg:w="585"/><text x="72.5669%" y="334.50"></text></g><g><title>merge_environment_settings (requests/sessions.py:761) (3,090 samples, 3.78%)</title><rect x="69.3424%" y="292" width="3.7840%" height="15" fill="rgb(217,125,39)" fg:x="56625" fg:w="3090"/><text x="69.5924%" y="302.50">merg..</text></g><g><title>get_environ_proxies (requests/utils.py:833) (1,429 samples, 1.75%)</title><rect x="71.3764%" y="308" width="1.7499%" height="15" fill="rgb(235,36,10)" fg:x="58286" fg:w="1429"/><text x="71.6264%" y="318.50"></text></g><g><title>request (requests/sessions.py:579) (3,217 samples, 3.94%)</title><rect x="69.3363%" y="276" width="3.9395%" height="15" fill="rgb(251,123,47)" fg:x="56620" fg:w="3217"/><text x="69.5863%" y="286.50">requ..</text></g><g><title>get_connection (requests/adapters.py:340) (108 samples, 0.13%)</title><rect x="73.4423%" y="324" width="0.1323%" height="15" fill="rgb(221,13,13)" fg:x="59973" fg:w="108"/><text x="73.6923%" y="334.50"></text></g><g><title>connection_from_url (urllib3/poolmanager.py:298) (295 samples, 0.36%)</title><rect x="73.6640%" y="340" width="0.3613%" height="15" fill="rgb(238,131,9)" fg:x="60154" fg:w="295"/><text x="73.9140%" y="350.50"></text></g><g><title>connection_from_context (urllib3/poolmanager.py:259) (146 samples, 0.18%)</title><rect x="74.0497%" y="372" width="0.1788%" height="15" fill="rgb(211,50,8)" fg:x="60469" fg:w="146"/><text x="74.2997%" y="382.50"></text></g><g><title>get (&lt;frozen _collections_abc&gt;:774) (92 samples, 0.11%)</title><rect x="74.3057%" y="404" width="0.1127%" height="15" fill="rgb(245,182,24)" fg:x="60678" fg:w="92"/><text x="74.5557%" y="414.50"></text></g><g><title>connection_from_pool_key (urllib3/poolmanager.py:274) (97 samples, 0.12%)</title><rect x="74.3044%" y="388" width="0.1188%" height="15" fill="rgb(242,14,37)" fg:x="60677" fg:w="97"/><text x="74.5544%" y="398.50"></text></g><g><title>__init__ (queue.py:46) (94 samples, 0.12%)</title><rect x="74.6645%" y="436" width="0.1151%" height="15" fill="rgb(246,228,12)" fg:x="60971" fg:w="94"/><text x="74.9145%" y="446.50"></text></g><g><title>__init__ (queue.py:50) (104 samples, 0.13%)</title><rect x="74.7796%" y="436" width="0.1274%" height="15" fill="rgb(213,55,15)" fg:x="61065" fg:w="104"/><text x="75.0296%" y="446.50"></text></g><g><title>__init__ (queue.py:54) (111 samples, 0.14%)</title><rect x="74.9069%" y="436" width="0.1359%" height="15" fill="rgb(209,9,3)" fg:x="61169" fg:w="111"/><text x="75.1569%" y="446.50"></text></g><g><title>__init__ (urllib3/connectionpool.py:206) (379 samples, 0.46%)</title><rect x="74.5800%" y="420" width="0.4641%" height="15" fill="rgb(230,59,30)" fg:x="60902" fg:w="379"/><text x="74.8300%" y="430.50"></text></g><g><title>__enter__ (threading.py:272) (93 samples, 0.11%)</title><rect x="75.1788%" y="452" width="0.1139%" height="15" fill="rgb(209,121,21)" fg:x="61391" fg:w="93"/><text x="75.4288%" y="462.50"></text></g><g><title>put (queue.py:133) (200 samples, 0.24%)</title><rect x="75.1114%" y="436" width="0.2449%" height="15" fill="rgb(220,109,13)" fg:x="61336" fg:w="200"/><text x="75.3614%" y="446.50"></text></g><g><title>notify (threading.py:376) (347 samples, 0.42%)</title><rect x="75.4298%" y="452" width="0.4249%" height="15" fill="rgb(232,18,1)" fg:x="61596" fg:w="347"/><text x="75.6798%" y="462.50"></text></g><g><title>_is_owned (threading.py:289) (332 samples, 0.41%)</title><rect x="75.4482%" y="468" width="0.4066%" height="15" fill="rgb(215,41,42)" fg:x="61611" fg:w="332"/><text x="75.6982%" y="478.50"></text></g><g><title>acquire (gevent/thread.py:132) (248 samples, 0.30%)</title><rect x="75.5511%" y="484" width="0.3037%" height="15" fill="rgb(224,123,36)" fg:x="61695" fg:w="248"/><text x="75.8011%" y="494.50"></text></g><g><title>sleep (gevent/hub.py:159) (130 samples, 0.16%)</title><rect x="75.6956%" y="500" width="0.1592%" height="15" fill="rgb(240,125,3)" fg:x="61813" fg:w="130"/><text x="75.9456%" y="510.50"></text></g><g><title>__init__ (urllib3/connectionpool.py:215) (660 samples, 0.81%)</title><rect x="75.0698%" y="420" width="0.8082%" height="15" fill="rgb(205,98,50)" fg:x="61302" fg:w="660"/><text x="75.3198%" y="430.50"></text></g><g><title>put (queue.py:152) (384 samples, 0.47%)</title><rect x="75.4078%" y="436" width="0.4702%" height="15" fill="rgb(205,185,37)" fg:x="61578" fg:w="384"/><text x="75.6578%" y="446.50"></text></g><g><title>connection_from_pool_key (urllib3/poolmanager.py:282) (1,209 samples, 1.48%)</title><rect x="74.4244%" y="388" width="1.4805%" height="15" fill="rgb(238,207,15)" fg:x="60775" fg:w="1209"/><text x="74.6744%" y="398.50"></text></g><g><title>_new_pool (urllib3/poolmanager.py:214) (1,189 samples, 1.46%)</title><rect x="74.4489%" y="404" width="1.4560%" height="15" fill="rgb(213,199,42)" fg:x="60795" fg:w="1189"/><text x="74.6989%" y="414.50"></text></g><g><title>connection_from_url (urllib3/poolmanager.py:299) (1,588 samples, 1.94%)</title><rect x="74.0252%" y="340" width="1.9446%" height="15" fill="rgb(235,201,11)" fg:x="60449" fg:w="1588"/><text x="74.2752%" y="350.50">c..</text></g><g><title>connection_from_host (urllib3/poolmanager.py:246) (1,574 samples, 1.93%)</title><rect x="74.0424%" y="356" width="1.9275%" height="15" fill="rgb(207,46,11)" fg:x="60463" fg:w="1574"/><text x="74.2924%" y="366.50">c..</text></g><g><title>connection_from_context (urllib3/poolmanager.py:261) (1,422 samples, 1.74%)</title><rect x="74.2285%" y="372" width="1.7414%" height="15" fill="rgb(241,35,35)" fg:x="60615" fg:w="1422"/><text x="74.4785%" y="382.50"></text></g><g><title>send (requests/adapters.py:454) (2,073 samples, 2.54%)</title><rect x="73.4362%" y="308" width="2.5386%" height="15" fill="rgb(243,32,47)" fg:x="59968" fg:w="2073"/><text x="73.6862%" y="318.50">se..</text></g><g><title>get_connection (requests/adapters.py:356) (1,900 samples, 2.33%)</title><rect x="73.6481%" y="324" width="2.3267%" height="15" fill="rgb(247,202,23)" fg:x="60141" fg:w="1900"/><text x="73.8981%" y="334.50">g..</text></g><g><title>request_url (requests/adapters.py:384) (91 samples, 0.11%)</title><rect x="75.9907%" y="324" width="0.1114%" height="15" fill="rgb(219,102,11)" fg:x="62054" fg:w="91"/><text x="76.2407%" y="334.50"></text></g><g><title>send (requests/adapters.py:459) (130 samples, 0.16%)</title><rect x="75.9895%" y="308" width="0.1592%" height="15" fill="rgb(243,110,44)" fg:x="62053" fg:w="130"/><text x="76.2395%" y="318.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:643) (129 samples, 0.16%)</title><rect x="76.2454%" y="324" width="0.1580%" height="15" fill="rgb(222,74,54)" fg:x="62262" fg:w="129"/><text x="76.4954%" y="334.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:686) (83 samples, 0.10%)</title><rect x="76.4597%" y="324" width="0.1016%" height="15" fill="rgb(216,99,12)" fg:x="62437" fg:w="83"/><text x="76.7097%" y="334.50"></text></g><g><title>_get_conn (urllib3/connectionpool.py:276) (88 samples, 0.11%)</title><rect x="76.6054%" y="340" width="0.1078%" height="15" fill="rgb(226,22,26)" fg:x="62556" fg:w="88"/><text x="76.8554%" y="350.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:704) (174 samples, 0.21%)</title><rect x="76.6054%" y="324" width="0.2131%" height="15" fill="rgb(217,163,10)" fg:x="62556" fg:w="174"/><text x="76.8554%" y="334.50"></text></g><g><title>_get_conn (urllib3/connectionpool.py:299) (86 samples, 0.11%)</title><rect x="76.7132%" y="340" width="0.1053%" height="15" fill="rgb(213,25,53)" fg:x="62644" fg:w="86"/><text x="76.9632%" y="350.50"></text></g><g><title>request (urllib3/connection.py:241) (114 samples, 0.14%)</title><rect x="76.9165%" y="356" width="0.1396%" height="15" fill="rgb(252,105,26)" fg:x="62810" fg:w="114"/><text x="77.1665%" y="366.50"></text></g><g><title>copy (requests/structures.py:77) (114 samples, 0.14%)</title><rect x="76.9165%" y="372" width="0.1396%" height="15" fill="rgb(220,39,43)" fg:x="62810" fg:w="114"/><text x="77.1665%" y="382.50"></text></g><g><title>__init__ (requests/structures.py:44) (82 samples, 0.10%)</title><rect x="76.9557%" y="388" width="0.1004%" height="15" fill="rgb(229,68,48)" fg:x="62842" fg:w="82"/><text x="77.2057%" y="398.50"></text></g><g><title>_send_request (http/client.py:1314) (119 samples, 0.15%)</title><rect x="77.1834%" y="388" width="0.1457%" height="15" fill="rgb(252,8,32)" fg:x="63028" fg:w="119"/><text x="77.4334%" y="398.50"></text></g><g><title>putrequest (urllib3/connection.py:219) (112 samples, 0.14%)</title><rect x="77.1920%" y="404" width="0.1372%" height="15" fill="rgb(223,20,43)" fg:x="63035" fg:w="112"/><text x="77.4420%" y="414.50"></text></g><g><title>_send_request (http/client.py:1344) (163 samples, 0.20%)</title><rect x="77.3941%" y="388" width="0.1996%" height="15" fill="rgb(229,81,49)" fg:x="63200" fg:w="163"/><text x="77.6441%" y="398.50"></text></g><g><title>putheader (urllib3/connection.py:224) (118 samples, 0.14%)</title><rect x="77.4492%" y="404" width="0.1445%" height="15" fill="rgb(236,28,36)" fg:x="63245" fg:w="118"/><text x="77.6992%" y="414.50"></text></g><g><title>__send_chunk (gevent/_socketcommon.py:331) (102 samples, 0.12%)</title><rect x="77.6843%" y="484" width="0.1249%" height="15" fill="rgb(249,185,26)" fg:x="63437" fg:w="102"/><text x="77.9343%" y="494.50"></text></g><g><title>send (gevent/_socketcommon.py:725) (97 samples, 0.12%)</title><rect x="77.6904%" y="500" width="0.1188%" height="15" fill="rgb(249,174,33)" fg:x="63442" fg:w="97"/><text x="77.9404%" y="510.50"></text></g><g><title>_sendall (gevent/_socketcommon.py:391) (105 samples, 0.13%)</title><rect x="77.6819%" y="468" width="0.1286%" height="15" fill="rgb(233,201,37)" fg:x="63435" fg:w="105"/><text x="77.9319%" y="478.50"></text></g><g><title>send (http/client.py:1019) (153 samples, 0.19%)</title><rect x="77.6243%" y="436" width="0.1874%" height="15" fill="rgb(221,78,26)" fg:x="63388" fg:w="153"/><text x="77.8743%" y="446.50"></text></g><g><title>sendall (gevent/_socketcommon.py:702) (143 samples, 0.18%)</title><rect x="77.6365%" y="452" width="0.1751%" height="15" fill="rgb(250,127,30)" fg:x="63398" fg:w="143"/><text x="77.8865%" y="462.50"></text></g><g><title>getaddrinfo (gevent/_socketcommon.py:225) (189 samples, 0.23%)</title><rect x="77.8680%" y="500" width="0.2314%" height="15" fill="rgb(230,49,44)" fg:x="63587" fg:w="189"/><text x="78.1180%" y="510.50"></text></g><g><title>getaddrinfo (gevent/resolver/thread.py:63) (176 samples, 0.22%)</title><rect x="77.8839%" y="516" width="0.2155%" height="15" fill="rgb(229,67,23)" fg:x="63600" fg:w="176"/><text x="78.1339%" y="526.50"></text></g><g><title>apply (gevent/pool.py:161) (175 samples, 0.21%)</title><rect x="77.8851%" y="532" width="0.2143%" height="15" fill="rgb(249,83,47)" fg:x="63601" fg:w="175"/><text x="78.1351%" y="542.50"></text></g><g><title>create_connection (urllib3/util/connection.py:72) (225 samples, 0.28%)</title><rect x="77.8668%" y="484" width="0.2755%" height="15" fill="rgb(215,43,3)" fg:x="63586" fg:w="225"/><text x="78.1168%" y="494.50"></text></g><g><title>__init__ (gevent/_socket3.py:125) (150 samples, 0.18%)</title><rect x="78.1582%" y="500" width="0.1837%" height="15" fill="rgb(238,154,13)" fg:x="63824" fg:w="150"/><text x="78.4082%" y="510.50"></text></g><g><title>create_connection (urllib3/util/connection.py:76) (239 samples, 0.29%)</title><rect x="78.1447%" y="484" width="0.2927%" height="15" fill="rgb(219,56,2)" fg:x="63813" fg:w="239"/><text x="78.3947%" y="494.50"></text></g><g><title>_internal_connect (gevent/_socketcommon.py:630) (108 samples, 0.13%)</title><rect x="78.5195%" y="516" width="0.1323%" height="15" fill="rgb(233,0,4)" fg:x="64119" fg:w="108"/><text x="78.7695%" y="526.50"></text></g><g><title>_internal_connect (gevent/_socketcommon.py:635) (293 samples, 0.36%)</title><rect x="78.6823%" y="516" width="0.3588%" height="15" fill="rgb(235,30,7)" fg:x="64252" fg:w="293"/><text x="78.9323%" y="526.50"></text></g><g><title>create_connection (urllib3/util/connection.py:85) (668 samples, 0.82%)</title><rect x="78.4950%" y="484" width="0.8180%" height="15" fill="rgb(250,79,13)" fg:x="64099" fg:w="668"/><text x="78.7450%" y="494.50"></text></g><g><title>connect (gevent/_socketcommon.py:590) (664 samples, 0.81%)</title><rect x="78.4999%" y="500" width="0.8131%" height="15" fill="rgb(211,146,34)" fg:x="64103" fg:w="664"/><text x="78.7499%" y="510.50"></text></g><g><title>_internal_connect (gevent/_socketcommon.py:640) (219 samples, 0.27%)</title><rect x="79.0448%" y="516" width="0.2682%" height="15" fill="rgb(228,22,38)" fg:x="64548" fg:w="219"/><text x="79.2948%" y="526.50"></text></g><g><title>_start_new_or_dummy (gevent/timeout.py:284) (114 samples, 0.14%)</title><rect x="79.1734%" y="532" width="0.1396%" height="15" fill="rgb(235,168,5)" fg:x="64653" fg:w="114"/><text x="79.4234%" y="542.50"></text></g><g><title>_new_conn (urllib3/connection.py:174) (1,221 samples, 1.50%)</title><rect x="77.8190%" y="468" width="1.4952%" height="15" fill="rgb(221,155,16)" fg:x="63547" fg:w="1221"/><text x="78.0690%" y="478.50"></text></g><g><title>connect (urllib3/connection.py:205) (1,227 samples, 1.50%)</title><rect x="77.8129%" y="452" width="1.5026%" height="15" fill="rgb(215,215,53)" fg:x="63542" fg:w="1227"/><text x="78.0629%" y="462.50"></text></g><g><title>_send_output (http/client.py:1058) (1,392 samples, 1.70%)</title><rect x="77.6194%" y="420" width="1.7046%" height="15" fill="rgb(223,4,10)" fg:x="63384" fg:w="1392"/><text x="77.8694%" y="430.50"></text></g><g><title>send (http/client.py:996) (1,234 samples, 1.51%)</title><rect x="77.8129%" y="436" width="1.5111%" height="15" fill="rgb(234,103,6)" fg:x="63542" fg:w="1234"/><text x="78.0629%" y="446.50"></text></g><g><title>send (http/client.py:1019) (102 samples, 0.12%)</title><rect x="79.3350%" y="436" width="0.1249%" height="15" fill="rgb(227,97,0)" fg:x="64785" fg:w="102"/><text x="79.5850%" y="446.50"></text></g><g><title>sendall (gevent/_socketcommon.py:702) (97 samples, 0.12%)</title><rect x="79.3412%" y="452" width="0.1188%" height="15" fill="rgb(234,150,53)" fg:x="64790" fg:w="97"/><text x="79.5912%" y="462.50"></text></g><g><title>_make_request (urllib3/connectionpool.py:416) (2,096 samples, 2.57%)</title><rect x="76.8944%" y="340" width="2.5667%" height="15" fill="rgb(228,201,54)" fg:x="62792" fg:w="2096"/><text x="77.1444%" y="350.50">_m..</text></g><g><title>request (urllib3/connection.py:244) (1,908 samples, 2.34%)</title><rect x="77.1247%" y="356" width="2.3365%" height="15" fill="rgb(222,22,37)" fg:x="62980" fg:w="1908"/><text x="77.3747%" y="366.50">r..</text></g><g><title>request (http/client.py:1303) (1,900 samples, 2.33%)</title><rect x="77.1345%" y="372" width="2.3267%" height="15" fill="rgb(237,53,32)" fg:x="62988" fg:w="1900"/><text x="77.3845%" y="382.50">r..</text></g><g><title>_send_request (http/client.py:1349) (1,524 samples, 1.87%)</title><rect x="77.5949%" y="388" width="1.8663%" height="15" fill="rgb(233,25,53)" fg:x="63364" fg:w="1524"/><text x="77.8449%" y="398.50">_..</text></g><g><title>endheaders (http/client.py:1298) (1,522 samples, 1.86%)</title><rect x="77.5974%" y="404" width="1.8638%" height="15" fill="rgb(210,40,34)" fg:x="63366" fg:w="1522"/><text x="77.8474%" y="414.50">e..</text></g><g><title>_send_output (http/client.py:1097) (106 samples, 0.13%)</title><rect x="79.3314%" y="420" width="0.1298%" height="15" fill="rgb(241,220,44)" fg:x="64782" fg:w="106"/><text x="79.5814%" y="430.50"></text></g><g><title>_read_status (http/client.py:286) (221 samples, 0.27%)</title><rect x="79.6192%" y="388" width="0.2706%" height="15" fill="rgb(235,28,35)" fg:x="65017" fg:w="221"/><text x="79.8692%" y="398.50"></text></g><g><title>readinto (socket.py:706) (192 samples, 0.24%)</title><rect x="79.6547%" y="404" width="0.2351%" height="15" fill="rgb(210,56,17)" fg:x="65046" fg:w="192"/><text x="79.9047%" y="414.50"></text></g><g><title>recv_into (gevent/_socketcommon.py:696) (121 samples, 0.15%)</title><rect x="79.7416%" y="420" width="0.1482%" height="15" fill="rgb(224,130,29)" fg:x="65117" fg:w="121"/><text x="79.9916%" y="430.50"></text></g><g><title>begin (http/client.py:325) (247 samples, 0.30%)</title><rect x="79.6155%" y="372" width="0.3025%" height="15" fill="rgb(235,212,8)" fg:x="65014" fg:w="247"/><text x="79.8655%" y="382.50"></text></g><g><title>_parsegen (email/feedparser.py:238) (171 samples, 0.21%)</title><rect x="80.3674%" y="468" width="0.2094%" height="15" fill="rgb(223,33,50)" fg:x="65628" fg:w="171"/><text x="80.6174%" y="478.50"></text></g><g><title>parse (email/parser.py:56) (440 samples, 0.54%)</title><rect x="80.1372%" y="420" width="0.5388%" height="15" fill="rgb(219,149,13)" fg:x="65440" fg:w="440"/><text x="80.3872%" y="430.50"></text></g><g><title>feed (email/feedparser.py:174) (387 samples, 0.47%)</title><rect x="80.2021%" y="436" width="0.4739%" height="15" fill="rgb(250,156,29)" fg:x="65493" fg:w="387"/><text x="80.4521%" y="446.50"></text></g><g><title>_call_parse (email/feedparser.py:178) (385 samples, 0.47%)</title><rect x="80.2045%" y="452" width="0.4715%" height="15" fill="rgb(216,193,19)" fg:x="65495" fg:w="385"/><text x="80.4545%" y="462.50"></text></g><g><title>begin (http/client.py:344) (679 samples, 0.83%)</title><rect x="79.9388%" y="372" width="0.8315%" height="15" fill="rgb(216,135,14)" fg:x="65278" fg:w="679"/><text x="80.1888%" y="382.50"></text></g><g><title>parse_headers (http/client.py:243) (625 samples, 0.77%)</title><rect x="80.0049%" y="388" width="0.7654%" height="15" fill="rgb(241,47,5)" fg:x="65332" fg:w="625"/><text x="80.2549%" y="398.50"></text></g><g><title>parsestr (email/parser.py:67) (613 samples, 0.75%)</title><rect x="80.0196%" y="404" width="0.7507%" height="15" fill="rgb(233,42,35)" fg:x="65344" fg:w="613"/><text x="80.2696%" y="414.50"></text></g><g><title>getresponse (http/client.py:1395) (1,002 samples, 1.23%)</title><rect x="79.6143%" y="356" width="1.2270%" height="15" fill="rgb(231,13,6)" fg:x="65013" fg:w="1002"/><text x="79.8643%" y="366.50"></text></g><g><title>_make_request (urllib3/connectionpool.py:462) (1,086 samples, 1.33%)</title><rect x="79.5175%" y="340" width="1.3299%" height="15" fill="rgb(207,181,40)" fg:x="64934" fg:w="1086"/><text x="79.7675%" y="350.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:715) (3,358 samples, 4.11%)</title><rect x="76.8234%" y="324" width="4.1122%" height="15" fill="rgb(254,173,49)" fg:x="62734" fg:w="3358"/><text x="77.0734%" y="334.50">urlo..</text></g><g><title>from_httplib (urllib3/response.py:649) (137 samples, 0.17%)</title><rect x="80.9931%" y="340" width="0.1678%" height="15" fill="rgb(221,1,38)" fg:x="66139" fg:w="137"/><text x="81.2431%" y="350.50"></text></g><g><title>from_httplib (urllib3/response.py:653) (140 samples, 0.17%)</title><rect x="81.1646%" y="340" width="0.1714%" height="15" fill="rgb(206,124,46)" fg:x="66279" fg:w="140"/><text x="81.4146%" y="350.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:735) (331 samples, 0.41%)</title><rect x="80.9417%" y="324" width="0.4053%" height="15" fill="rgb(249,21,11)" fg:x="66097" fg:w="331"/><text x="81.1917%" y="334.50"></text></g><g><title>send (requests/adapters.py:486) (4,235 samples, 5.19%)</title><rect x="76.2099%" y="308" width="5.1861%" height="15" fill="rgb(222,201,40)" fg:x="62233" fg:w="4235"/><text x="76.4599%" y="318.50">send (..</text></g><g><title>build_response (requests/adapters.py:304) (123 samples, 0.15%)</title><rect x="81.4046%" y="324" width="0.1506%" height="15" fill="rgb(235,61,29)" fg:x="66475" fg:w="123"/><text x="81.6546%" y="334.50"></text></g><g><title>build_response (requests/adapters.py:310) (115 samples, 0.14%)</title><rect x="81.5614%" y="324" width="0.1408%" height="15" fill="rgb(219,207,3)" fg:x="66603" fg:w="115"/><text x="81.8114%" y="334.50"></text></g><g><title>__init__ (requests/structures.py:44) (109 samples, 0.13%)</title><rect x="81.5687%" y="340" width="0.1335%" height="15" fill="rgb(222,56,46)" fg:x="66609" fg:w="109"/><text x="81.8187%" y="350.50"></text></g><g><title>send (requests/sessions.py:703) (6,958 samples, 8.52%)</title><rect x="73.4105%" y="292" width="8.5207%" height="15" fill="rgb(239,76,54)" fg:x="59947" fg:w="6958"/><text x="73.6605%" y="302.50">send (reques..</text></g><g><title>send (requests/adapters.py:538) (433 samples, 0.53%)</title><rect x="81.4009%" y="308" width="0.5302%" height="15" fill="rgb(231,124,27)" fg:x="66472" fg:w="433"/><text x="81.6509%" y="318.50"></text></g><g><title>build_response (requests/adapters.py:323) (154 samples, 0.19%)</title><rect x="81.7426%" y="324" width="0.1886%" height="15" fill="rgb(249,195,6)" fg:x="66751" fg:w="154"/><text x="81.9926%" y="334.50"></text></g><g><title>extract_cookies_to_jar (requests/cookies.py:137) (90 samples, 0.11%)</title><rect x="81.8210%" y="340" width="0.1102%" height="15" fill="rgb(237,174,47)" fg:x="66815" fg:w="90"/><text x="82.0710%" y="350.50"></text></g><g><title>send (requests/sessions.py:719) (99 samples, 0.12%)</title><rect x="81.9691%" y="292" width="0.1212%" height="15" fill="rgb(206,201,31)" fg:x="66936" fg:w="99"/><text x="82.2191%" y="302.50"></text></g><g><title>release_conn (urllib3/response.py:285) (113 samples, 0.14%)</title><rect x="82.3610%" y="404" width="0.1384%" height="15" fill="rgb(231,57,52)" fg:x="67256" fg:w="113"/><text x="82.6110%" y="414.50"></text></g><g><title>_put_conn (urllib3/connectionpool.py:316) (113 samples, 0.14%)</title><rect x="82.3610%" y="420" width="0.1384%" height="15" fill="rgb(248,177,22)" fg:x="67256" fg:w="113"/><text x="82.6110%" y="430.50"></text></g><g><title>__exit__ (contextlib.py:144) (128 samples, 0.16%)</title><rect x="82.3463%" y="372" width="0.1567%" height="15" fill="rgb(215,211,37)" fg:x="67244" fg:w="128"/><text x="82.5963%" y="382.50"></text></g><g><title>_error_catcher (urllib3/response.py:485) (117 samples, 0.14%)</title><rect x="82.3598%" y="388" width="0.1433%" height="15" fill="rgb(241,128,51)" fg:x="67255" fg:w="117"/><text x="82.6098%" y="398.50"></text></g><g><title>read (urllib3/response.py:566) (169 samples, 0.21%)</title><rect x="82.3194%" y="356" width="0.2070%" height="15" fill="rgb(227,165,31)" fg:x="67222" fg:w="169"/><text x="82.5694%" y="366.50"></text></g><g><title>read (urllib3/response.py:567) (98 samples, 0.12%)</title><rect x="82.5263%" y="356" width="0.1200%" height="15" fill="rgb(228,167,24)" fg:x="67391" fg:w="98"/><text x="82.7763%" y="366.50"></text></g><g><title>_fp_read (urllib3/response.py:533) (90 samples, 0.11%)</title><rect x="82.5361%" y="372" width="0.1102%" height="15" fill="rgb(228,143,12)" fg:x="67399" fg:w="90"/><text x="82.7861%" y="382.50"></text></g><g><title>generate (requests/models.py:816) (355 samples, 0.43%)</title><rect x="82.2177%" y="324" width="0.4347%" height="15" fill="rgb(249,149,8)" fg:x="67139" fg:w="355"/><text x="82.4677%" y="334.50"></text></g><g><title>stream (urllib3/response.py:628) (333 samples, 0.41%)</title><rect x="82.2447%" y="340" width="0.4078%" height="15" fill="rgb(243,35,44)" fg:x="67161" fg:w="333"/><text x="82.4947%" y="350.50"></text></g><g><title>post (requests/api.py:115) (14,739 samples, 18.05%)</title><rect x="64.6253%" y="244" width="18.0492%" height="15" fill="rgb(246,89,9)" fg:x="52773" fg:w="14739"/><text x="64.8753%" y="254.50">post (requests/api.py:115)</text></g><g><title>request (requests/api.py:59) (13,589 samples, 16.64%)</title><rect x="66.0336%" y="260" width="16.6410%" height="15" fill="rgb(233,213,13)" fg:x="53923" fg:w="13589"/><text x="66.2836%" y="270.50">request (requests/api.py:5..</text></g><g><title>request (requests/sessions.py:589) (7,657 samples, 9.38%)</title><rect x="73.2978%" y="276" width="9.3767%" height="15" fill="rgb(233,141,41)" fg:x="59855" fg:w="7657"/><text x="73.5478%" y="286.50">request (requ..</text></g><g><title>send (requests/sessions.py:747) (401 samples, 0.49%)</title><rect x="82.1834%" y="292" width="0.4911%" height="15" fill="rgb(239,167,4)" fg:x="67111" fg:w="401"/><text x="82.4334%" y="302.50"></text></g><g><title>content (requests/models.py:899) (394 samples, 0.48%)</title><rect x="82.1920%" y="308" width="0.4825%" height="15" fill="rgb(209,217,16)" fg:x="67118" fg:w="394"/><text x="82.4420%" y="318.50"></text></g><g><title>json_rpc (pytest/lib/cluster.py:219) (14,771 samples, 18.09%)</title><rect x="64.5922%" y="228" width="18.0884%" height="15" fill="rgb(219,88,35)" fg:x="52746" fg:w="14771"/><text x="64.8422%" y="238.50">json_rpc (pytest/lib/cluster..</text></g><g><title>decode (json/decoder.py:337) (202 samples, 0.25%)</title><rect x="82.7321%" y="260" width="0.2474%" height="15" fill="rgb(220,193,23)" fg:x="67559" fg:w="202"/><text x="82.9821%" y="270.50"></text></g><g><title>raw_decode (json/decoder.py:353) (200 samples, 0.24%)</title><rect x="82.7345%" y="276" width="0.2449%" height="15" fill="rgb(230,90,52)" fg:x="67561" fg:w="200"/><text x="82.9845%" y="286.50"></text></g><g><title>send_tx_async (base.py:329) (16,270 samples, 19.92%)</title><rect x="63.0676%" y="180" width="19.9241%" height="15" fill="rgb(252,106,19)" fg:x="51501" fg:w="16270"/><text x="63.3176%" y="190.50">send_tx_async (base.py:329)</text></g><g><title>final_block_hash (base.py:364) (16,065 samples, 19.67%)</title><rect x="63.3186%" y="196" width="19.6730%" height="15" fill="rgb(206,74,20)" fg:x="51706" fg:w="16065"/><text x="63.5686%" y="206.50">final_block_hash (base.py:364)</text></g><g><title>get_final_block (pytest/lib/cluster.py:348) (16,009 samples, 19.60%)</title><rect x="63.3872%" y="212" width="19.6045%" height="15" fill="rgb(230,138,44)" fg:x="51762" fg:w="16009"/><text x="63.6372%" y="222.50">get_final_block (pytest/lib/clu..</text></g><g><title>json_rpc (pytest/lib/cluster.py:223) (248 samples, 0.30%)</title><rect x="82.6880%" y="228" width="0.3037%" height="15" fill="rgb(235,182,43)" fg:x="67523" fg:w="248"/><text x="82.9380%" y="238.50"></text></g><g><title>loads (json/__init__.py:346) (214 samples, 0.26%)</title><rect x="82.7296%" y="244" width="0.2621%" height="15" fill="rgb(242,16,51)" fg:x="67557" fg:w="214"/><text x="82.9796%" y="254.50"></text></g><g><title>serialize_num (pytest/lib/serializer.py:30) (104 samples, 0.13%)</title><rect x="83.6358%" y="404" width="0.1274%" height="15" fill="rgb(248,9,4)" fg:x="68297" fg:w="104"/><text x="83.8858%" y="414.50"></text></g><g><title>serialize_struct (pytest/lib/serializer.py:146) (493 samples, 0.60%)</title><rect x="83.2231%" y="324" width="0.6037%" height="15" fill="rgb(210,31,22)" fg:x="67960" fg:w="493"/><text x="83.4731%" y="334.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:85) (489 samples, 0.60%)</title><rect x="83.2280%" y="340" width="0.5988%" height="15" fill="rgb(239,54,39)" fg:x="67964" fg:w="489"/><text x="83.4780%" y="350.50"></text></g><g><title>serialize_struct (pytest/lib/serializer.py:136) (487 samples, 0.60%)</title><rect x="83.2305%" y="356" width="0.5964%" height="15" fill="rgb(230,99,41)" fg:x="67966" fg:w="487"/><text x="83.4805%" y="366.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:74) (393 samples, 0.48%)</title><rect x="83.3456%" y="372" width="0.4813%" height="15" fill="rgb(253,106,12)" fg:x="68060" fg:w="393"/><text x="83.5956%" y="382.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:57) (306 samples, 0.37%)</title><rect x="83.4521%" y="388" width="0.3747%" height="15" fill="rgb(213,46,41)" fg:x="68147" fg:w="306"/><text x="83.7021%" y="398.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:74) (521 samples, 0.64%)</title><rect x="83.1925%" y="292" width="0.6380%" height="15" fill="rgb(215,133,35)" fg:x="67935" fg:w="521"/><text x="83.4425%" y="302.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:85) (517 samples, 0.63%)</title><rect x="83.1974%" y="308" width="0.6331%" height="15" fill="rgb(213,28,5)" fg:x="67939" fg:w="517"/><text x="83.4474%" y="318.50"></text></g><g><title>serialize (pytest/lib/serializer.py:194) (677 samples, 0.83%)</title><rect x="83.0492%" y="260" width="0.8290%" height="15" fill="rgb(215,77,49)" fg:x="67818" fg:w="677"/><text x="83.2992%" y="270.50"></text></g><g><title>serialize_struct (pytest/lib/serializer.py:136) (668 samples, 0.82%)</title><rect x="83.0602%" y="276" width="0.8180%" height="15" fill="rgb(248,100,22)" fg:x="67827" fg:w="668"/><text x="83.3102%" y="286.50"></text></g><g><title>compute_transaction_hash (pytest/lib/transaction.py:28) (696 samples, 0.85%)</title><rect x="83.0296%" y="244" width="0.8523%" height="15" fill="rgb(208,67,9)" fg:x="67802" fg:w="696"/><text x="83.2796%" y="254.50"></text></g><g><title>sign_transaction (pytest/lib/transaction.py:35) (738 samples, 0.90%)</title><rect x="83.0272%" y="228" width="0.9037%" height="15" fill="rgb(219,133,21)" fg:x="67800" fg:w="738"/><text x="83.2772%" y="238.50"></text></g><g><title>crypto_sign_seed_keypair (nacl/bindings/crypto_sign.py:63) (291 samples, 0.36%)</title><rect x="84.0179%" y="260" width="0.3564%" height="15" fill="rgb(246,46,29)" fg:x="68609" fg:w="291"/><text x="84.2679%" y="270.50"></text></g><g><title>__init__ (nacl/signing.py:188) (342 samples, 0.42%)</title><rect x="83.9885%" y="244" width="0.4188%" height="15" fill="rgb(246,185,52)" fg:x="68585" fg:w="342"/><text x="84.2385%" y="254.50"></text></g><g><title>crypto_sign (nacl/bindings/crypto_sign.py:84) (268 samples, 0.33%)</title><rect x="84.4367%" y="260" width="0.3282%" height="15" fill="rgb(252,136,11)" fg:x="68951" fg:w="268"/><text x="84.6867%" y="270.50"></text></g><g><title>sign (nacl/signing.py:232) (305 samples, 0.37%)</title><rect x="84.4146%" y="244" width="0.3735%" height="15" fill="rgb(219,138,53)" fg:x="68933" fg:w="305"/><text x="84.6646%" y="254.50"></text></g><g><title>sign_transaction (pytest/lib/transaction.py:40) (733 samples, 0.90%)</title><rect x="83.9420%" y="228" width="0.8976%" height="15" fill="rgb(211,51,23)" fg:x="68547" fg:w="733"/><text x="84.1920%" y="238.50"></text></g><g><title>b58encode (base58/__init__.py:65) (125 samples, 0.15%)</title><rect x="84.8837%" y="244" width="0.1531%" height="15" fill="rgb(247,221,28)" fg:x="69316" fg:w="125"/><text x="85.1337%" y="254.50"></text></g><g><title>sign_function_call_transaction (pytest/lib/transaction.py:294) (1,655 samples, 2.03%)</title><rect x="83.0186%" y="212" width="2.0267%" height="15" fill="rgb(251,222,45)" fg:x="67793" fg:w="1655"/><text x="83.2686%" y="222.50">s..</text></g><g><title>sign_transaction (pytest/lib/transaction.py:45) (164 samples, 0.20%)</title><rect x="84.8445%" y="228" width="0.2008%" height="15" fill="rgb(217,162,53)" fg:x="69284" fg:w="164"/><text x="85.0945%" y="238.50"></text></g><g><title>b58decode (base58/__init__.py:124) (90 samples, 0.11%)</title><rect x="85.0710%" y="244" width="0.1102%" height="15" fill="rgb(229,93,14)" fg:x="69469" fg:w="90"/><text x="85.3210%" y="254.50"></text></g><g><title>sign_function_call_transaction (pytest/lib/transaction.py:295) (193 samples, 0.24%)</title><rect x="85.0453%" y="212" width="0.2363%" height="15" fill="rgb(209,67,49)" fg:x="69448" fg:w="193"/><text x="85.2953%" y="222.50"></text></g><g><title>decoded_pk (pytest/lib/key.py:64) (180 samples, 0.22%)</title><rect x="85.0612%" y="228" width="0.2204%" height="15" fill="rgb(213,87,29)" fg:x="69461" fg:w="180"/><text x="85.3112%" y="238.50"></text></g><g><title>b58decode_int (base58/__init__.py:102) (114 samples, 0.14%)</title><rect x="85.3196%" y="260" width="0.1396%" height="15" fill="rgb(205,151,52)" fg:x="69672" fg:w="114"/><text x="85.5696%" y="270.50"></text></g><g><title>b58decode (base58/__init__.py:124) (137 samples, 0.17%)</title><rect x="85.3025%" y="244" width="0.1678%" height="15" fill="rgb(253,215,39)" fg:x="69658" fg:w="137"/><text x="85.5525%" y="254.50"></text></g><g><title>b58decode (base58/__init__.py:128) (84 samples, 0.10%)</title><rect x="85.4788%" y="244" width="0.1029%" height="15" fill="rgb(221,220,41)" fg:x="69802" fg:w="84"/><text x="85.7288%" y="254.50"></text></g><g><title>sign (base.py:132) (2,142 samples, 2.62%)</title><rect x="83.0015%" y="196" width="2.6231%" height="15" fill="rgb(218,133,21)" fg:x="67779" fg:w="2142"/><text x="83.2515%" y="206.50">si..</text></g><g><title>sign_function_call_transaction (pytest/lib/transaction.py:296) (280 samples, 0.34%)</title><rect x="85.2817%" y="212" width="0.3429%" height="15" fill="rgb(221,193,43)" fg:x="69641" fg:w="280"/><text x="85.5317%" y="222.50"></text></g><g><title>decoded_sk (pytest/lib/key.py:68) (273 samples, 0.33%)</title><rect x="85.2902%" y="228" width="0.3343%" height="15" fill="rgb(240,128,52)" fg:x="69648" fg:w="273"/><text x="85.5402%" y="238.50"></text></g><g><title>sign (base.py:134) (107 samples, 0.13%)</title><rect x="85.6380%" y="196" width="0.1310%" height="15" fill="rgb(253,114,12)" fg:x="69932" fg:w="107"/><text x="85.8880%" y="206.50"></text></g><g><title>send_tx_async (base.py:330) (2,327 samples, 2.85%)</title><rect x="82.9917%" y="180" width="2.8496%" height="15" fill="rgb(215,223,47)" fg:x="67771" fg:w="2327"/><text x="83.2417%" y="190.50">se..</text></g><g><title>serialize_struct (pytest/lib/serializer.py:146) (451 samples, 0.55%)</title><rect x="86.0470%" y="308" width="0.5523%" height="15" fill="rgb(248,225,23)" fg:x="70266" fg:w="451"/><text x="86.2970%" y="318.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:85) (446 samples, 0.55%)</title><rect x="86.0531%" y="324" width="0.5462%" height="15" fill="rgb(250,108,0)" fg:x="70271" fg:w="446"/><text x="86.3031%" y="334.50"></text></g><g><title>serialize_struct (pytest/lib/serializer.py:136) (445 samples, 0.54%)</title><rect x="86.0544%" y="340" width="0.5449%" height="15" fill="rgb(228,208,7)" fg:x="70272" fg:w="445"/><text x="86.3044%" y="350.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:74) (374 samples, 0.46%)</title><rect x="86.1413%" y="356" width="0.4580%" height="15" fill="rgb(244,45,10)" fg:x="70343" fg:w="374"/><text x="86.3913%" y="366.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:57) (286 samples, 0.35%)</title><rect x="86.2491%" y="372" width="0.3502%" height="15" fill="rgb(207,125,25)" fg:x="70431" fg:w="286"/><text x="86.4991%" y="382.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:74) (475 samples, 0.58%)</title><rect x="86.0201%" y="276" width="0.5817%" height="15" fill="rgb(210,195,18)" fg:x="70244" fg:w="475"/><text x="86.2701%" y="286.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:85) (468 samples, 0.57%)</title><rect x="86.0287%" y="292" width="0.5731%" height="15" fill="rgb(249,80,12)" fg:x="70251" fg:w="468"/><text x="86.2787%" y="302.50"></text></g><g><title>serialize (pytest/lib/serializer.py:194) (633 samples, 0.78%)</title><rect x="85.8609%" y="212" width="0.7752%" height="15" fill="rgb(221,65,9)" fg:x="70114" fg:w="633"/><text x="86.1109%" y="222.50"></text></g><g><title>serialize_struct (pytest/lib/serializer.py:136) (622 samples, 0.76%)</title><rect x="85.8744%" y="228" width="0.7617%" height="15" fill="rgb(235,49,36)" fg:x="70125" fg:w="622"/><text x="86.1244%" y="238.50"></text></g><g><title>serialize_field (pytest/lib/serializer.py:85) (614 samples, 0.75%)</title><rect x="85.8842%" y="244" width="0.7519%" height="15" fill="rgb(225,32,20)" fg:x="70133" fg:w="614"/><text x="86.1342%" y="254.50"></text></g><g><title>serialize_struct (pytest/lib/serializer.py:136) (604 samples, 0.74%)</title><rect x="85.8964%" y="260" width="0.7397%" height="15" fill="rgb(215,141,46)" fg:x="70143" fg:w="604"/><text x="86.1464%" y="270.50"></text></g><g><title>send_tx_async (base.py:331) (654 samples, 0.80%)</title><rect x="85.8413%" y="180" width="0.8009%" height="15" fill="rgb(250,160,47)" fg:x="70098" fg:w="654"/><text x="86.0913%" y="190.50"></text></g><g><title>serialize_transaction (pytest/lib/transaction.py:50) (650 samples, 0.80%)</title><rect x="85.8462%" y="196" width="0.7960%" height="15" fill="rgb(216,222,40)" fg:x="70102" fg:w="650"/><text x="86.0962%" y="206.50"></text></g><g><title>get_netrc_auth (requests/utils.py:215) (94 samples, 0.12%)</title><rect x="87.1810%" y="260" width="0.1151%" height="15" fill="rgb(234,217,39)" fg:x="71192" fg:w="94"/><text x="87.4310%" y="270.50"></text></g><g><title>exists (&lt;frozen genericpath&gt;:19) (100 samples, 0.12%)</title><rect x="87.3071%" y="276" width="0.1225%" height="15" fill="rgb(207,178,40)" fg:x="71295" fg:w="100"/><text x="87.5571%" y="286.50"></text></g><g><title>prepare_request (requests/sessions.py:483) (337 samples, 0.41%)</title><rect x="87.0255%" y="244" width="0.4127%" height="15" fill="rgb(221,136,13)" fg:x="71065" fg:w="337"/><text x="87.2755%" y="254.50"></text></g><g><title>get_netrc_auth (requests/utils.py:222) (116 samples, 0.14%)</title><rect x="87.2961%" y="260" width="0.1421%" height="15" fill="rgb(249,199,10)" fg:x="71286" fg:w="116"/><text x="87.5461%" y="270.50"></text></g><g><title>prepare_url (requests/models.py:434) (189 samples, 0.23%)</title><rect x="87.5067%" y="276" width="0.2314%" height="15" fill="rgb(249,222,13)" fg:x="71458" fg:w="189"/><text x="87.7567%" y="286.50"></text></g><g><title>prepare (requests/models.py:368) (369 samples, 0.45%)</title><rect x="87.4822%" y="260" width="0.4519%" height="15" fill="rgb(244,185,38)" fg:x="71438" fg:w="369"/><text x="87.7322%" y="270.50"></text></g><g><title>prepare (requests/models.py:369) (171 samples, 0.21%)</title><rect x="87.9341%" y="260" width="0.2094%" height="15" fill="rgb(236,202,9)" fg:x="71807" fg:w="171"/><text x="88.1841%" y="270.50"></text></g><g><title>get_cookie_header (requests/cookies.py:147) (151 samples, 0.18%)</title><rect x="88.2084%" y="292" width="0.1849%" height="15" fill="rgb(250,229,37)" fg:x="72031" fg:w="151"/><text x="88.4584%" y="302.50"></text></g><g><title>prepare (requests/models.py:370) (207 samples, 0.25%)</title><rect x="88.1435%" y="260" width="0.2535%" height="15" fill="rgb(206,174,23)" fg:x="71978" fg:w="207"/><text x="88.3935%" y="270.50"></text></g><g><title>prepare_cookies (requests/models.py:627) (202 samples, 0.25%)</title><rect x="88.1496%" y="276" width="0.2474%" height="15" fill="rgb(211,33,43)" fg:x="71983" fg:w="202"/><text x="88.3996%" y="286.50"></text></g><g><title>encode (json/encoder.py:200) (107 samples, 0.13%)</title><rect x="88.4448%" y="308" width="0.1310%" height="15" fill="rgb(245,58,50)" fg:x="72224" fg:w="107"/><text x="88.6948%" y="318.50"></text></g><g><title>prepare_body (requests/models.py:511) (142 samples, 0.17%)</title><rect x="88.4044%" y="276" width="0.1739%" height="15" fill="rgb(244,68,36)" fg:x="72191" fg:w="142"/><text x="88.6544%" y="286.50"></text></g><g><title>dumps (json/__init__.py:238) (116 samples, 0.14%)</title><rect x="88.4362%" y="292" width="0.1421%" height="15" fill="rgb(232,229,15)" fg:x="72217" fg:w="116"/><text x="88.6862%" y="302.50"></text></g><g><title>prepare (requests/models.py:371) (244 samples, 0.30%)</title><rect x="88.3970%" y="260" width="0.2988%" height="15" fill="rgb(254,30,23)" fg:x="72185" fg:w="244"/><text x="88.6470%" y="270.50"></text></g><g><title>prepare_request (requests/sessions.py:486) (1,112 samples, 1.36%)</title><rect x="87.4590%" y="244" width="1.3617%" height="15" fill="rgb(235,160,14)" fg:x="71419" fg:w="1112"/><text x="87.7090%" y="254.50"></text></g><g><title>merge_setting (requests/sessions.py:79) (145 samples, 0.18%)</title><rect x="88.8513%" y="260" width="0.1776%" height="15" fill="rgb(212,155,44)" fg:x="72556" fg:w="145"/><text x="89.1013%" y="270.50"></text></g><g><title>prepare_request (requests/sessions.py:492) (251 samples, 0.31%)</title><rect x="88.8244%" y="244" width="0.3074%" height="15" fill="rgb(226,2,50)" fg:x="72534" fg:w="251"/><text x="89.0744%" y="254.50"></text></g><g><title>request (requests/sessions.py:575) (1,927 samples, 2.36%)</title><rect x="86.8295%" y="228" width="2.3598%" height="15" fill="rgb(234,177,6)" fg:x="70905" fg:w="1927"/><text x="87.0795%" y="238.50">r..</text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (179 samples, 0.22%)</title><rect x="89.5151%" y="324" width="0.2192%" height="15" fill="rgb(217,24,9)" fg:x="73098" fg:w="179"/><text x="89.7651%" y="334.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (120 samples, 0.15%)</title><rect x="89.5873%" y="340" width="0.1470%" height="15" fill="rgb(220,13,46)" fg:x="73157" fg:w="120"/><text x="89.8373%" y="350.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (208 samples, 0.25%)</title><rect x="89.7955%" y="340" width="0.2547%" height="15" fill="rgb(239,221,27)" fg:x="73327" fg:w="208"/><text x="90.0455%" y="350.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (377 samples, 0.46%)</title><rect x="89.7343%" y="324" width="0.4617%" height="15" fill="rgb(222,198,25)" fg:x="73277" fg:w="377"/><text x="89.9843%" y="334.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (118 samples, 0.14%)</title><rect x="90.0514%" y="340" width="0.1445%" height="15" fill="rgb(211,99,13)" fg:x="73536" fg:w="118"/><text x="90.3014%" y="350.50"></text></g><g><title>getproxies_environment (urllib/request.py:2511) (618 samples, 0.76%)</title><rect x="89.4428%" y="308" width="0.7568%" height="15" fill="rgb(232,111,31)" fg:x="73039" fg:w="618"/><text x="89.6928%" y="318.50"></text></g><g><title>getproxies_environment (urllib/request.py:2513) (85 samples, 0.10%)</title><rect x="90.2400%" y="308" width="0.1041%" height="15" fill="rgb(245,82,37)" fg:x="73690" fg:w="85"/><text x="90.4900%" y="318.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (132 samples, 0.16%)</title><rect x="90.4409%" y="324" width="0.1616%" height="15" fill="rgb(227,149,46)" fg:x="73854" fg:w="132"/><text x="90.6909%" y="334.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (96 samples, 0.12%)</title><rect x="90.4849%" y="340" width="0.1176%" height="15" fill="rgb(218,36,50)" fg:x="73890" fg:w="96"/><text x="90.7349%" y="350.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (180 samples, 0.22%)</title><rect x="90.6637%" y="340" width="0.2204%" height="15" fill="rgb(226,80,48)" fg:x="74036" fg:w="180"/><text x="90.9137%" y="350.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (330 samples, 0.40%)</title><rect x="90.6025%" y="324" width="0.4041%" height="15" fill="rgb(238,224,15)" fg:x="73986" fg:w="330"/><text x="90.8525%" y="334.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (97 samples, 0.12%)</title><rect x="90.8878%" y="340" width="0.1188%" height="15" fill="rgb(241,136,10)" fg:x="74219" fg:w="97"/><text x="91.1378%" y="350.50"></text></g><g><title>getproxies_environment (urllib/request.py:2521) (520 samples, 0.64%)</title><rect x="90.3747%" y="308" width="0.6368%" height="15" fill="rgb(208,32,45)" fg:x="73800" fg:w="520"/><text x="90.6247%" y="318.50"></text></g><g><title>proxy_bypass_environment (urllib/request.py:2538) (1,353 samples, 1.66%)</title><rect x="89.4379%" y="292" width="1.6569%" height="15" fill="rgb(207,135,9)" fg:x="73035" fg:w="1353"/><text x="89.6879%" y="302.50"></text></g><g><title>get_environ_proxies (requests/utils.py:830) (1,545 samples, 1.89%)</title><rect x="89.2089%" y="260" width="1.8920%" height="15" fill="rgb(206,86,44)" fg:x="72848" fg:w="1545"/><text x="89.4589%" y="270.50">g..</text></g><g><title>should_bypass_proxies (requests/utils.py:814) (1,378 samples, 1.69%)</title><rect x="89.4134%" y="276" width="1.6875%" height="15" fill="rgb(245,177,15)" fg:x="73015" fg:w="1378"/><text x="89.6634%" y="286.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (160 samples, 0.20%)</title><rect x="91.1683%" y="292" width="0.1959%" height="15" fill="rgb(206,64,50)" fg:x="74448" fg:w="160"/><text x="91.4183%" y="302.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (119 samples, 0.15%)</title><rect x="91.2185%" y="308" width="0.1457%" height="15" fill="rgb(234,36,40)" fg:x="74489" fg:w="119"/><text x="91.4685%" y="318.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (181 samples, 0.22%)</title><rect x="91.4279%" y="308" width="0.2217%" height="15" fill="rgb(213,64,8)" fg:x="74660" fg:w="181"/><text x="91.6779%" y="318.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (334 samples, 0.41%)</title><rect x="91.3642%" y="292" width="0.4090%" height="15" fill="rgb(210,75,36)" fg:x="74608" fg:w="334"/><text x="91.6142%" y="302.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (95 samples, 0.12%)</title><rect x="91.6569%" y="308" width="0.1163%" height="15" fill="rgb(229,88,21)" fg:x="74847" fg:w="95"/><text x="91.9069%" y="318.50"></text></g><g><title>getproxies_environment (urllib/request.py:2511) (542 samples, 0.66%)</title><rect x="91.1119%" y="276" width="0.6637%" height="15" fill="rgb(252,204,47)" fg:x="74402" fg:w="542"/><text x="91.3619%" y="286.50"></text></g><g><title>getproxies_environment (urllib/request.py:2513) (89 samples, 0.11%)</title><rect x="91.8197%" y="276" width="0.1090%" height="15" fill="rgb(208,77,27)" fg:x="74980" fg:w="89"/><text x="92.0697%" y="286.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:860) (147 samples, 0.18%)</title><rect x="92.0206%" y="292" width="0.1800%" height="15" fill="rgb(221,76,26)" fg:x="75144" fg:w="147"/><text x="92.2706%" y="302.50"></text></g><g><title>__iter__ (&lt;frozen os&gt;:701) (118 samples, 0.14%)</title><rect x="92.0561%" y="308" width="0.1445%" height="15" fill="rgb(225,139,18)" fg:x="75173" fg:w="118"/><text x="92.3061%" y="318.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:676) (137 samples, 0.17%)</title><rect x="92.2937%" y="308" width="0.1678%" height="15" fill="rgb(230,137,11)" fg:x="75367" fg:w="137"/><text x="92.5437%" y="318.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:861) (324 samples, 0.40%)</title><rect x="92.2006%" y="292" width="0.3968%" height="15" fill="rgb(212,28,1)" fg:x="75291" fg:w="324"/><text x="92.4506%" y="302.50"></text></g><g><title>__getitem__ (&lt;frozen os&gt;:680) (109 samples, 0.13%)</title><rect x="92.4639%" y="308" width="0.1335%" height="15" fill="rgb(248,164,17)" fg:x="75506" fg:w="109"/><text x="92.7139%" y="318.50"></text></g><g><title>getproxies_environment (urllib/request.py:2521) (518 samples, 0.63%)</title><rect x="91.9642%" y="276" width="0.6343%" height="15" fill="rgb(222,171,42)" fg:x="75098" fg:w="518"/><text x="92.2142%" y="286.50"></text></g><g><title>merge_environment_settings (requests/sessions.py:761) (2,860 samples, 3.50%)</title><rect x="89.2028%" y="244" width="3.5023%" height="15" fill="rgb(243,84,45)" fg:x="72843" fg:w="2860"/><text x="89.4528%" y="254.50">mer..</text></g><g><title>get_environ_proxies (requests/utils.py:833) (1,310 samples, 1.60%)</title><rect x="91.1009%" y="260" width="1.6042%" height="15" fill="rgb(252,49,23)" fg:x="74393" fg:w="1310"/><text x="91.3509%" y="270.50"></text></g><g><title>request (requests/sessions.py:579) (3,007 samples, 3.68%)</title><rect x="89.1905%" y="228" width="3.6823%" height="15" fill="rgb(215,19,7)" fg:x="72833" fg:w="3007"/><text x="89.4405%" y="238.50">requ..</text></g><g><title>get_connection (requests/adapters.py:340) (102 samples, 0.12%)</title><rect x="93.0296%" y="276" width="0.1249%" height="15" fill="rgb(238,81,41)" fg:x="75968" fg:w="102"/><text x="93.2796%" y="286.50"></text></g><g><title>connection_from_url (urllib3/poolmanager.py:298) (236 samples, 0.29%)</title><rect x="93.2501%" y="292" width="0.2890%" height="15" fill="rgb(210,199,37)" fg:x="76148" fg:w="236"/><text x="93.5001%" y="302.50"></text></g><g><title>connection_from_context (urllib3/poolmanager.py:259) (115 samples, 0.14%)</title><rect x="93.5746%" y="324" width="0.1408%" height="15" fill="rgb(244,192,49)" fg:x="76413" fg:w="115"/><text x="93.8246%" y="334.50"></text></g><g><title>connection_from_url (urllib3/poolmanager.py:299) (251 samples, 0.31%)</title><rect x="93.5391%" y="292" width="0.3074%" height="15" fill="rgb(226,211,11)" fg:x="76384" fg:w="251"/><text x="93.7891%" y="302.50"></text></g><g><title>connection_from_host (urllib3/poolmanager.py:246) (233 samples, 0.29%)</title><rect x="93.5611%" y="308" width="0.2853%" height="15" fill="rgb(236,162,54)" fg:x="76402" fg:w="233"/><text x="93.8111%" y="318.50"></text></g><g><title>connection_from_context (urllib3/poolmanager.py:261) (107 samples, 0.13%)</title><rect x="93.7154%" y="324" width="0.1310%" height="15" fill="rgb(220,229,9)" fg:x="76528" fg:w="107"/><text x="93.9654%" y="334.50"></text></g><g><title>send (requests/adapters.py:454) (675 samples, 0.83%)</title><rect x="93.0235%" y="260" width="0.8266%" height="15" fill="rgb(250,87,22)" fg:x="75963" fg:w="675"/><text x="93.2735%" y="270.50"></text></g><g><title>get_connection (requests/adapters.py:356) (495 samples, 0.61%)</title><rect x="93.2439%" y="276" width="0.6062%" height="15" fill="rgb(239,43,17)" fg:x="76143" fg:w="495"/><text x="93.4939%" y="286.50"></text></g><g><title>request_url (requests/adapters.py:384) (82 samples, 0.10%)</title><rect x="93.8685%" y="276" width="0.1004%" height="15" fill="rgb(231,177,25)" fg:x="76653" fg:w="82"/><text x="94.1185%" y="286.50"></text></g><g><title>send (requests/adapters.py:459) (113 samples, 0.14%)</title><rect x="93.8660%" y="260" width="0.1384%" height="15" fill="rgb(219,179,1)" fg:x="76651" fg:w="113"/><text x="94.1160%" y="270.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:643) (150 samples, 0.18%)</title><rect x="94.1073%" y="276" width="0.1837%" height="15" fill="rgb(238,219,53)" fg:x="76848" fg:w="150"/><text x="94.3573%" y="286.50"></text></g><g><title>_get_conn (urllib3/connectionpool.py:276) (156 samples, 0.19%)</title><rect x="94.5285%" y="292" width="0.1910%" height="15" fill="rgb(232,167,36)" fg:x="77192" fg:w="156"/><text x="94.7785%" y="302.50"></text></g><g><title>get (queue.py:182) (85 samples, 0.10%)</title><rect x="94.6155%" y="308" width="0.1041%" height="15" fill="rgb(244,19,51)" fg:x="77263" fg:w="85"/><text x="94.8655%" y="318.50"></text></g><g><title>poll_wait_for_socket (urllib3/util/wait.py:106) (145 samples, 0.18%)</title><rect x="94.7416%" y="340" width="0.1776%" height="15" fill="rgb(224,6,22)" fg:x="77366" fg:w="145"/><text x="94.9916%" y="350.50"></text></g><g><title>_retry_on_intr (urllib3/util/wait.py:43) (143 samples, 0.18%)</title><rect x="94.7441%" y="356" width="0.1751%" height="15" fill="rgb(224,145,5)" fg:x="77368" fg:w="143"/><text x="94.9941%" y="366.50"></text></g><g><title>do_poll (urllib3/util/wait.py:104) (143 samples, 0.18%)</title><rect x="94.7441%" y="372" width="0.1751%" height="15" fill="rgb(234,130,49)" fg:x="77368" fg:w="143"/><text x="94.9941%" y="382.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:704) (351 samples, 0.43%)</title><rect x="94.5175%" y="276" width="0.4298%" height="15" fill="rgb(254,6,2)" fg:x="77183" fg:w="351"/><text x="94.7675%" y="286.50"></text></g><g><title>_get_conn (urllib3/connectionpool.py:290) (186 samples, 0.23%)</title><rect x="94.7196%" y="292" width="0.2278%" height="15" fill="rgb(208,96,46)" fg:x="77348" fg:w="186"/><text x="94.9696%" y="302.50"></text></g><g><title>is_connection_dropped (urllib3/util/connection.py:28) (179 samples, 0.22%)</title><rect x="94.7281%" y="308" width="0.2192%" height="15" fill="rgb(239,3,39)" fg:x="77355" fg:w="179"/><text x="94.9781%" y="318.50"></text></g><g><title>wait_for_read (urllib3/util/wait.py:145) (179 samples, 0.22%)</title><rect x="94.7281%" y="324" width="0.2192%" height="15" fill="rgb(233,210,1)" fg:x="77355" fg:w="179"/><text x="94.9781%" y="334.50"></text></g><g><title>_send_request (http/client.py:1314) (186 samples, 0.23%)</title><rect x="95.2449%" y="340" width="0.2278%" height="15" fill="rgb(244,137,37)" fg:x="77777" fg:w="186"/><text x="95.4949%" y="350.50"></text></g><g><title>putrequest (urllib3/connection.py:219) (176 samples, 0.22%)</title><rect x="95.2572%" y="356" width="0.2155%" height="15" fill="rgb(240,136,2)" fg:x="77787" fg:w="176"/><text x="95.5072%" y="366.50"></text></g><g><title>_send_request (http/client.py:1344) (158 samples, 0.19%)</title><rect x="95.5339%" y="340" width="0.1935%" height="15" fill="rgb(239,18,37)" fg:x="78013" fg:w="158"/><text x="95.7839%" y="350.50"></text></g><g><title>putheader (urllib3/connection.py:224) (121 samples, 0.15%)</title><rect x="95.5792%" y="356" width="0.1482%" height="15" fill="rgb(218,185,22)" fg:x="78050" fg:w="121"/><text x="95.8292%" y="366.50"></text></g><g><title>send (http/client.py:1019) (180 samples, 0.22%)</title><rect x="95.7543%" y="388" width="0.2204%" height="15" fill="rgb(225,218,4)" fg:x="78193" fg:w="180"/><text x="96.0043%" y="398.50"></text></g><g><title>sendall (gevent/_socketcommon.py:702) (166 samples, 0.20%)</title><rect x="95.7715%" y="404" width="0.2033%" height="15" fill="rgb(230,182,32)" fg:x="78207" fg:w="166"/><text x="96.0215%" y="414.50"></text></g><g><title>_sendall (gevent/_socketcommon.py:391) (120 samples, 0.15%)</title><rect x="95.8278%" y="420" width="0.1470%" height="15" fill="rgb(242,56,43)" fg:x="78253" fg:w="120"/><text x="96.0778%" y="430.50"></text></g><g><title>__send_chunk (gevent/_socketcommon.py:320) (112 samples, 0.14%)</title><rect x="95.8376%" y="436" width="0.1372%" height="15" fill="rgb(233,99,24)" fg:x="78261" fg:w="112"/><text x="96.0876%" y="446.50"></text></g><g><title>send (gevent/_socketcommon.py:725) (109 samples, 0.13%)</title><rect x="95.8413%" y="452" width="0.1335%" height="15" fill="rgb(234,209,42)" fg:x="78264" fg:w="109"/><text x="96.0913%" y="462.50"></text></g><g><title>_send_output (http/client.py:1058) (190 samples, 0.23%)</title><rect x="95.7433%" y="372" width="0.2327%" height="15" fill="rgb(227,7,12)" fg:x="78184" fg:w="190"/><text x="95.9933%" y="382.50"></text></g><g><title>_send_output (http/client.py:1097) (100 samples, 0.12%)</title><rect x="95.9944%" y="372" width="0.1225%" height="15" fill="rgb(245,203,43)" fg:x="78389" fg:w="100"/><text x="96.2444%" y="382.50"></text></g><g><title>send (http/client.py:1019) (93 samples, 0.11%)</title><rect x="96.0029%" y="388" width="0.1139%" height="15" fill="rgb(238,205,33)" fg:x="78396" fg:w="93"/><text x="96.2529%" y="398.50"></text></g><g><title>sendall (gevent/_socketcommon.py:702) (85 samples, 0.10%)</title><rect x="96.0127%" y="404" width="0.1041%" height="15" fill="rgb(231,56,7)" fg:x="78404" fg:w="85"/><text x="96.2627%" y="414.50"></text></g><g><title>_make_request (urllib3/connectionpool.py:416) (908 samples, 1.11%)</title><rect x="95.0061%" y="292" width="1.1119%" height="15" fill="rgb(244,186,29)" fg:x="77582" fg:w="908"/><text x="95.2561%" y="302.50"></text></g><g><title>request (urllib3/connection.py:244) (764 samples, 0.94%)</title><rect x="95.1825%" y="308" width="0.9356%" height="15" fill="rgb(234,111,31)" fg:x="77726" fg:w="764"/><text x="95.4325%" y="318.50"></text></g><g><title>request (http/client.py:1303) (754 samples, 0.92%)</title><rect x="95.1947%" y="324" width="0.9233%" height="15" fill="rgb(241,149,10)" fg:x="77736" fg:w="754"/><text x="95.4447%" y="334.50"></text></g><g><title>_send_request (http/client.py:1349) (316 samples, 0.39%)</title><rect x="95.7311%" y="340" width="0.3870%" height="15" fill="rgb(249,206,44)" fg:x="78174" fg:w="316"/><text x="95.9811%" y="350.50"></text></g><g><title>endheaders (http/client.py:1298) (315 samples, 0.39%)</title><rect x="95.7323%" y="356" width="0.3857%" height="15" fill="rgb(251,153,30)" fg:x="78175" fg:w="315"/><text x="95.9823%" y="366.50"></text></g><g><title>getresponse (http/client.py:1391) (102 samples, 0.12%)</title><rect x="96.1793%" y="308" width="0.1249%" height="15" fill="rgb(239,152,38)" fg:x="78540" fg:w="102"/><text x="96.4293%" y="318.50"></text></g><g><title>_read_status (http/client.py:286) (170 samples, 0.21%)</title><rect x="96.3103%" y="340" width="0.2082%" height="15" fill="rgb(249,139,47)" fg:x="78647" fg:w="170"/><text x="96.5603%" y="350.50"></text></g><g><title>readinto (socket.py:706) (122 samples, 0.15%)</title><rect x="96.3691%" y="356" width="0.1494%" height="15" fill="rgb(244,64,35)" fg:x="78695" fg:w="122"/><text x="96.6191%" y="366.50"></text></g><g><title>begin (http/client.py:325) (204 samples, 0.25%)</title><rect x="96.3079%" y="324" width="0.2498%" height="15" fill="rgb(216,46,15)" fg:x="78645" fg:w="204"/><text x="96.5579%" y="334.50"></text></g><g><title>feed (email/feedparser.py:173) (83 samples, 0.10%)</title><rect x="96.8087%" y="388" width="0.1016%" height="15" fill="rgb(250,74,19)" fg:x="79054" fg:w="83"/><text x="97.0587%" y="398.50"></text></g><g><title>_parsegen (email/feedparser.py:238) (155 samples, 0.19%)</title><rect x="97.0916%" y="420" width="0.1898%" height="15" fill="rgb(249,42,33)" fg:x="79285" fg:w="155"/><text x="97.3416%" y="430.50"></text></g><g><title>parse (email/parser.py:56) (470 samples, 0.58%)</title><rect x="96.8063%" y="372" width="0.5756%" height="15" fill="rgb(242,149,17)" fg:x="79052" fg:w="470"/><text x="97.0563%" y="382.50"></text></g><g><title>feed (email/feedparser.py:174) (385 samples, 0.47%)</title><rect x="96.9104%" y="388" width="0.4715%" height="15" fill="rgb(244,29,21)" fg:x="79137" fg:w="385"/><text x="97.1604%" y="398.50"></text></g><g><title>_call_parse (email/feedparser.py:178) (383 samples, 0.47%)</title><rect x="96.9128%" y="404" width="0.4690%" height="15" fill="rgb(220,130,37)" fg:x="79139" fg:w="383"/><text x="97.1628%" y="414.50"></text></g><g><title>begin (http/client.py:344) (758 samples, 0.93%)</title><rect x="96.5895%" y="324" width="0.9282%" height="15" fill="rgb(211,67,2)" fg:x="78875" fg:w="758"/><text x="96.8395%" y="334.50"></text></g><g><title>parse_headers (http/client.py:243) (682 samples, 0.84%)</title><rect x="96.6826%" y="340" width="0.8352%" height="15" fill="rgb(235,68,52)" fg:x="78951" fg:w="682"/><text x="96.9326%" y="350.50"></text></g><g><title>parsestr (email/parser.py:67) (667 samples, 0.82%)</title><rect x="96.7010%" y="356" width="0.8168%" height="15" fill="rgb(246,142,3)" fg:x="78966" fg:w="667"/><text x="96.9510%" y="366.50"></text></g><g><title>parse (email/parser.py:57) (111 samples, 0.14%)</title><rect x="97.3818%" y="372" width="0.1359%" height="15" fill="rgb(241,25,7)" fg:x="79522" fg:w="111"/><text x="97.6318%" y="382.50"></text></g><g><title>getresponse (http/client.py:1395) (1,054 samples, 1.29%)</title><rect x="96.3042%" y="308" width="1.2907%" height="15" fill="rgb(242,119,39)" fg:x="78642" fg:w="1054"/><text x="96.5542%" y="318.50"></text></g><g><title>_make_request (urllib3/connectionpool.py:462) (1,167 samples, 1.43%)</title><rect x="96.1732%" y="292" width="1.4291%" height="15" fill="rgb(241,98,45)" fg:x="78535" fg:w="1167"/><text x="96.4232%" y="302.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:715) (2,237 samples, 2.74%)</title><rect x="94.9559%" y="276" width="2.7394%" height="15" fill="rgb(254,28,30)" fg:x="77541" fg:w="2237"/><text x="95.2059%" y="286.50">ur..</text></g><g><title>from_httplib (urllib3/response.py:649) (144 samples, 0.18%)</title><rect x="97.7553%" y="292" width="0.1763%" height="15" fill="rgb(241,142,54)" fg:x="79827" fg:w="144"/><text x="98.0053%" y="302.50"></text></g><g><title>from_httplib (urllib3/response.py:653) (155 samples, 0.19%)</title><rect x="97.9341%" y="292" width="0.1898%" height="15" fill="rgb(222,85,15)" fg:x="79973" fg:w="155"/><text x="98.1841%" y="302.50"></text></g><g><title>urlopen (urllib3/connectionpool.py:735) (353 samples, 0.43%)</title><rect x="97.7027%" y="276" width="0.4323%" height="15" fill="rgb(210,85,47)" fg:x="79784" fg:w="353"/><text x="97.9527%" y="286.50"></text></g><g><title>send (requests/adapters.py:486) (3,362 samples, 4.12%)</title><rect x="94.0730%" y="260" width="4.1171%" height="15" fill="rgb(224,206,25)" fg:x="76820" fg:w="3362"/><text x="94.3230%" y="270.50">send..</text></g><g><title>build_response (requests/adapters.py:304) (119 samples, 0.15%)</title><rect x="98.1925%" y="276" width="0.1457%" height="15" fill="rgb(243,201,19)" fg:x="80184" fg:w="119"/><text x="98.4425%" y="286.50"></text></g><g><title>build_response (requests/adapters.py:310) (115 samples, 0.14%)</title><rect x="98.3395%" y="276" width="0.1408%" height="15" fill="rgb(236,59,4)" fg:x="80304" fg:w="115"/><text x="98.5895%" y="286.50"></text></g><g><title>__init__ (requests/structures.py:44) (104 samples, 0.13%)</title><rect x="98.3529%" y="292" width="0.1274%" height="15" fill="rgb(254,179,45)" fg:x="80315" fg:w="104"/><text x="98.6029%" y="302.50"></text></g><g><title>send (requests/sessions.py:703) (4,674 samples, 5.72%)</title><rect x="92.9990%" y="244" width="5.7237%" height="15" fill="rgb(226,14,10)" fg:x="75943" fg:w="4674"/><text x="93.2490%" y="254.50">send (r..</text></g><g><title>send (requests/adapters.py:538) (434 samples, 0.53%)</title><rect x="98.1913%" y="260" width="0.5315%" height="15" fill="rgb(244,27,41)" fg:x="80183" fg:w="434"/><text x="98.4413%" y="270.50"></text></g><g><title>build_response (requests/adapters.py:323) (161 samples, 0.20%)</title><rect x="98.5256%" y="276" width="0.1972%" height="15" fill="rgb(235,35,32)" fg:x="80456" fg:w="161"/><text x="98.7756%" y="286.50"></text></g><g><title>extract_cookies_to_jar (requests/cookies.py:137) (93 samples, 0.11%)</title><rect x="98.6089%" y="292" width="0.1139%" height="15" fill="rgb(218,68,31)" fg:x="80524" fg:w="93"/><text x="98.8589%" y="302.50"></text></g><g><title>send (requests/sessions.py:719) (120 samples, 0.15%)</title><rect x="98.7742%" y="244" width="0.1470%" height="15" fill="rgb(207,120,37)" fg:x="80659" fg:w="120"/><text x="99.0242%" y="254.50"></text></g><g><title>release_conn (urllib3/response.py:285) (136 samples, 0.17%)</title><rect x="99.2040%" y="356" width="0.1665%" height="15" fill="rgb(227,98,0)" fg:x="81010" fg:w="136"/><text x="99.4540%" y="366.50"></text></g><g><title>_put_conn (urllib3/connectionpool.py:316) (131 samples, 0.16%)</title><rect x="99.2101%" y="372" width="0.1604%" height="15" fill="rgb(207,7,3)" fg:x="81015" fg:w="131"/><text x="99.4601%" y="382.50"></text></g><g><title>__exit__ (contextlib.py:144) (160 samples, 0.20%)</title><rect x="99.1771%" y="324" width="0.1959%" height="15" fill="rgb(206,98,19)" fg:x="80988" fg:w="160"/><text x="99.4271%" y="334.50"></text></g><g><title>_error_catcher (urllib3/response.py:485) (146 samples, 0.18%)</title><rect x="99.1942%" y="340" width="0.1788%" height="15" fill="rgb(217,5,26)" fg:x="81002" fg:w="146"/><text x="99.4442%" y="350.50"></text></g><g><title>read (urllib3/response.py:566) (190 samples, 0.23%)</title><rect x="99.1575%" y="308" width="0.2327%" height="15" fill="rgb(235,190,38)" fg:x="80972" fg:w="190"/><text x="99.4075%" y="318.50"></text></g><g><title>stream (urllib3/response.py:628) (315 samples, 0.39%)</title><rect x="99.1158%" y="292" width="0.3857%" height="15" fill="rgb(247,86,24)" fg:x="80938" fg:w="315"/><text x="99.3658%" y="302.50"></text></g><g><title>generate (requests/models.py:816) (355 samples, 0.43%)</title><rect x="99.0681%" y="276" width="0.4347%" height="15" fill="rgb(205,101,16)" fg:x="80899" fg:w="355"/><text x="99.3181%" y="286.50"></text></g><g><title>send (requests/sessions.py:747) (406 samples, 0.50%)</title><rect x="99.0301%" y="244" width="0.4972%" height="15" fill="rgb(246,168,33)" fg:x="80868" fg:w="406"/><text x="99.2801%" y="254.50"></text></g><g><title>content (requests/models.py:899) (398 samples, 0.49%)</title><rect x="99.0399%" y="260" width="0.4874%" height="15" fill="rgb(231,114,1)" fg:x="80876" fg:w="398"/><text x="99.2899%" y="270.50"></text></g><g><title>post (requests/sessions.py:637) (10,471 samples, 12.82%)</title><rect x="86.7059%" y="212" width="12.8227%" height="15" fill="rgb(207,184,53)" fg:x="70804" fg:w="10471"/><text x="86.9559%" y="222.50">post (requests/sess..</text></g><g><title>request (requests/sessions.py:589) (5,412 samples, 6.63%)</title><rect x="92.9011%" y="228" width="6.6275%" height="15" fill="rgb(224,95,51)" fg:x="75863" fg:w="5412"/><text x="93.1511%" y="238.50">request (..</text></g><g><title>post_json (base.py:385) (10,495 samples, 12.85%)</title><rect x="86.6801%" y="196" width="12.8521%" height="15" fill="rgb(212,188,45)" fg:x="70783" fg:w="10495"/><text x="86.9301%" y="206.50">post_json (base.py:..</text></g><g><title>send_tx_async (base.py:337) (10,509 samples, 12.87%)</title><rect x="86.6642%" y="180" width="12.8692%" height="15" fill="rgb(223,154,38)" fg:x="70770" fg:w="10509"/><text x="86.9142%" y="190.50">send_tx_async (base..</text></g><g><title>run (locust/user/task.py:339) (30,634 samples, 37.51%)</title><rect x="62.3022%" y="100" width="37.5141%" height="15" fill="rgb(251,22,52)" fg:x="50876" fg:w="30634"/><text x="62.5522%" y="110.50">run (locust/user/task.py:339)</text></g><g><title>execute_next_task (locust/user/task.py:372) (30,629 samples, 37.51%)</title><rect x="62.3084%" y="116" width="37.5080%" height="15" fill="rgb(229,209,22)" fg:x="50881" fg:w="30629"/><text x="62.5584%" y="126.50">execute_next_task (locust/user/task.py:372)</text></g><g><title>execute_task (locust/user/task.py:489) (30,617 samples, 37.49%)</title><rect x="62.3230%" y="132" width="37.4933%" height="15" fill="rgb(234,138,34)" fg:x="50893" fg:w="30617"/><text x="62.5730%" y="142.50">execute_task (locust/user/task.py:489)</text></g><g><title>ft_transfer (ft.py:31) (30,113 samples, 36.88%)</title><rect x="62.9402%" y="148" width="36.8761%" height="15" fill="rgb(212,95,11)" fg:x="51397" fg:w="30113"/><text x="63.1902%" y="158.50">ft_transfer (ft.py:31)</text></g><g><title>send_tx_async (base.py:571) (30,102 samples, 36.86%)</title><rect x="62.9537%" y="164" width="36.8626%" height="15" fill="rgb(240,179,47)" fg:x="51408" fg:w="30102"/><text x="63.2037%" y="174.50">send_tx_async (base.py:571)</text></g><g><title>send_tx_async (base.py:359) (108 samples, 0.13%)</title><rect x="99.6841%" y="180" width="0.1323%" height="15" fill="rgb(240,163,11)" fg:x="81402" fg:w="108"/><text x="99.9341%" y="190.50"></text></g><g><title>fire (locust/event.py:47) (84 samples, 0.10%)</title><rect x="99.7134%" y="196" width="0.1029%" height="15" fill="rgb(236,37,12)" fg:x="81426" fg:w="84"/><text x="99.9634%" y="206.50"></text></g><g><title>wait (locust/user/task.py:441) (107 samples, 0.13%)</title><rect x="99.8298%" y="116" width="0.1310%" height="15" fill="rgb(232,164,16)" fg:x="81521" fg:w="107"/><text x="100.0798%" y="126.50"></text></g><g><title>run (locust/user/task.py:345) (138 samples, 0.17%)</title><rect x="99.8163%" y="100" width="0.1690%" height="15" fill="rgb(244,205,15)" fg:x="81510" fg:w="138"/><text x="100.0663%" y="110.50"></text></g><g><title>run_user (locust/user/users.py:188) (31,272 samples, 38.30%)</title><rect x="61.6924%" y="68" width="38.2954%" height="15" fill="rgb(223,117,47)" fg:x="50378" fg:w="31272"/><text x="61.9424%" y="78.50">run_user (locust/user/users.py:188)</text></g><g><title>run (locust/user/users.py:156) (30,805 samples, 37.72%)</title><rect x="62.2643%" y="84" width="37.7235%" height="15" fill="rgb(244,107,35)" fg:x="50845" fg:w="30805"/><text x="62.5143%" y="94.50">run (locust/user/users.py:156)</text></g><g><title>all (81,660 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="81660"/><text x="0.2500%" y="62.50"></text></g></svg></svg>