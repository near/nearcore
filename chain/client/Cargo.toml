[package]
name = "near-client"
version = "0.5.0"
authors = ["Near Inc <hello@nearprotocol.com>"]
publish = false
edition = "2021"

[dependencies]
ansi_term = "0.12"
actix = "=0.11.0-beta.2"
actix-rt = "2"
futures = "0.3"
chrono = { version = "0.4.4", features = ["serde"] }
log = "0.4"
rand = "0.7"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
# Temporary workaround, fix with rust toolchain update.
sysinfo = { git = "https://github.com/near/sysinfo", rev = "3cb97ee79a02754407d2f0f63628f247d7c65e7b" }
strum = { version = "0.20", features = ["derive"] }
cached = "0.23"
lazy_static = "1.4"
borsh = "0.9"
reed-solomon-erasure = "4"
num-rational = "0.3"
linked-hash-map = "0.5.3"
thiserror = "1.0"

near-crypto = { path = "../../core/crypto", version = "0.5.0" }
near-primitives = { path = "../../core/primitives", version = "0.5.0" }
near-store = { path = "../../core/store", version = "0.5.0" }
near-metrics = { path = "../../core/metrics", version = "0.5.0" }
near-chain-configs = { path = "../../core/chain-configs", version = "0.5.0" }
near-chain = { path = "../chain", version = "0.5.0" }
near-client-primitives = { path = "../client-primitives", version = "0.5.0" }
near-network = { path = "../network", version = "0.5.0" }
near-pool = { path = "../pool", version = "0.5.0" }
near-chunks = { path = "../chunks", version = "0.5.0" }
near-telemetry = { path = "../telemetry", version = "0.5.0" }
near-performance-metrics = { path = "../../utils/near-performance-metrics", version = "0.5.0" }
near-performance-metrics-macros = { path = "../../utils/near-performance-metrics-macros", version = "0.5.0" }
near-vm-runner = { path = "../../runtime/near-vm-runner", version = "3.1.0" }
delay-detector = { path = "../../tools/delay_detector", optional = true, version = "0.5.0" }

[dev-dependencies]
near-logger-utils = { path = "../../test-utils/logger" }
near-actix-test-utils = { path = "../../test-utils/actix-test-utils" }
near-test-contracts = { path = "../../runtime/near-test-contracts" }

[features]
# if enabled, we assert in most situations that are impossible unless some byzantine behavior is observed.
byzantine_asserts = ["near-chain/byzantine_asserts"]
expensive_tests = []
test_features = ["near-network/test_features", "near-chain/test_features"]
delay_detector = ["near-chain/delay_detector", "near-network/delay_detector", "delay-detector"]
protocol_feature_block_header_v3 = ["near-primitives/protocol_feature_block_header_v3", "near-chain/protocol_feature_block_header_v3", "near-store/protocol_feature_block_header_v3"]
protocol_feature_chunk_only_producers = ["protocol_feature_block_header_v3", "near-primitives/protocol_feature_chunk_only_producers", "near-chain/protocol_feature_chunk_only_producers"]
protocol_feature_routing_exchange_algorithm = []
nightly_protocol = []
nightly_protocol_features = ["nightly_protocol", "near-chain/nightly_protocol_features", "protocol_feature_block_header_v3", "protocol_feature_routing_exchange_algorithm"]
sandbox = ["near-network/sandbox", "near-chain/sandbox"]
