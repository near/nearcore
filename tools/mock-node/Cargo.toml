[package]
name = "mock-node"
version = "0.0.0"
authors.workspace = true
publish = false
# Please update rust-toolchain.toml as well when changing version here:
rust-version.workspace = true
edition.workspace = true

[dependencies]
actix = "0.13.0"
actix-rt = "2"
actix-web = "4.0.1"
anyhow = "1.0.55"
clap = { version = "3.1.6", features = ["derive"] }
flate2 = "1.0.22"
futures = "0.3"
rand = "0.7"
rayon = "1.5"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
tar = "0.4.38"
tempfile = "3"
tracing = "0.1.13"
tokio = { version = "1.16.1", features = ["time"]}

near-actix-test-utils = { path = "../../test-utils/actix-test-utils" }
near-chain = { path = "../../chain/chain" }
near-chain-configs = { path = "../../core/chain-configs" }
near-client = { path = "../../chain/client" }
near-crypto = { path = "../../core/crypto" }
near-epoch-manager = { path = "../../chain/epoch-manager"}
near-jsonrpc = { path = "../../chain/jsonrpc" }
near-network = { path = "../../chain/network" }
near-network-primitives = { path = "../../chain/network-primitives" }
near-store = { path = "../../core/store" }
near-o11y = { path = "../../core/o11y" }
near-telemetry = { path = "../../chain/telemetry" }
near-performance-metrics = { path = "../../utils/near-performance-metrics" }
near-primitives = { path = "../../core/primitives" }
nearcore = { path = "../../nearcore" }

[dev-dependencies]
criterion = { version = "0.3.5", default_features = false, features = ["html_reports", "cargo_bench_support"] }

[[bench]]
name = "sync"
harness = false

[[bin]]
name = "mock-node"
# To make mock node work, we must disable some checks in chain, which is controlled by this feature.
# We don't make it a default feature, because we don't want it to be enabled unconditionally when you do, for example
# `cargo test --workspace`
required-features = ["mock_node"]

[features]
test_features = ["nearcore/test_features"]
mock_node = ["near-chain/mock_node", "near-epoch-manager/mock_node"]
