[package]
name = "mock-node"
version = "0.0.0"
authors.workspace = true
publish = false
edition.workspace = true

[dependencies]
actix-rt.workspace = true
actix-web.workspace = true
actix.workspace = true
anyhow.workspace = true
clap.workspace = true
flate2.workspace = true
futures.workspace = true
rand.workspace = true
rayon.workspace = true
serde.workspace = true
serde_json.workspace = true
tar.workspace = true
tempfile.workspace = true
tokio.workspace = true
tracing.workspace = true

near-actix-test-utils = { path = "../../test-utils/actix-test-utils" }
near-chain = { path = "../../chain/chain" }
near-chain-configs = { path = "../../core/chain-configs" }
near-client = { path = "../../chain/client" }
near-crypto = { path = "../../core/crypto" }
near-epoch-manager = { path = "../../chain/epoch-manager"}
near-jsonrpc = { path = "../../chain/jsonrpc" }
near-network = { path = "../../chain/network" }
near-store = { path = "../../core/store" }
near-o11y = { path = "../../core/o11y" }
near-telemetry = { path = "../../chain/telemetry" }
near-performance-metrics = { path = "../../utils/near-performance-metrics" }
near-primitives = { path = "../../core/primitives" }
nearcore = { path = "../../nearcore" }

[dev-dependencies]
criterion.workspace = true

[[bench]]
name = "sync"
harness = false

[[bin]]
name = "mock-node"
# To make mock node work, we must disable some checks in chain, which is controlled by this feature.
# We don't make it a default feature, because we don't want it to be enabled unconditionally when you do, for example
# `cargo test --workspace`
required-features = ["mock_node"]

[features]
test_features = ["nearcore/test_features"]
protocol_feature_flat_state = ["nearcore/protocol_feature_flat_state"]
mock_node = ["near-chain/mock_node", "near-epoch-manager/mock_node"]
