(module
  (type $ft (func))
  (type $st (struct))
  (type $at (array i8))

  (table 10 anyref)

  (elem declare func $f)
  (func $f)

  (func (export "init") (param $x externref)
    (table.set (i32.const 0) (ref.null any))
    (table.set (i32.const 1) (i31.new (i32.const 7)))
    (table.set (i32.const 2) (struct.new_default $st (rtt.canon $st)))
    (table.set (i32.const 3) (array.new_default $at (i32.const 0) (rtt.canon $at)))
    (table.set (i32.const 4) (ref.func $f))
    (table.set (i32.const 5) (rtt.canon $ft))
    (table.set (i32.const 6) (local.get $x))
  )

  (func (export "ref_as_non_null") (param $i i32)
    (drop (ref.as_non_null (table.get (local.get $i))))
  )
  (func (export "ref_as_i31") (param $i i32)
    (drop (ref.as_i31 (table.get (local.get $i))))
  )
  (func (export "ref_as_data") (param $i i32)
    (drop (ref.as_data (table.get (local.get $i))))
  )
  (func (export "ref_as_func") (param $i i32)
    (drop (ref.as_func (table.get (local.get $i))))
  )
)

(invoke "init" (ref.extern 0))

(assert_trap (invoke "ref_as_non_null" (i32.const 0)) "null reference")
(assert_return (invoke "ref_as_non_null" (i32.const 1)))
(assert_return (invoke "ref_as_non_null" (i32.const 2)))
(assert_return (invoke "ref_as_non_null" (i32.const 3)))
(assert_return (invoke "ref_as_non_null" (i32.const 4)))
(assert_return (invoke "ref_as_non_null" (i32.const 5)))
(assert_return (invoke "ref_as_non_null" (i32.const 6)))

(assert_trap (invoke "ref_as_i31" (i32.const 0)) "cast failure")
(assert_return (invoke "ref_as_i31" (i32.const 1)))
(assert_trap (invoke "ref_as_i31" (i32.const 2)) "cast failure")
(assert_trap (invoke "ref_as_i31" (i32.const 3)) "cast failure")
(assert_trap (invoke "ref_as_i31" (i32.const 4)) "cast failure")
(assert_trap (invoke "ref_as_i31" (i32.const 5)) "cast failure")
(assert_trap (invoke "ref_as_i31" (i32.const 6)) "cast failure")

(assert_trap (invoke "ref_as_data" (i32.const 0)) "cast failure")
(assert_trap (invoke "ref_as_data" (i32.const 1)) "cast failure")
(assert_return (invoke "ref_as_data" (i32.const 2)))
(assert_return (invoke "ref_as_data" (i32.const 3)))
(assert_trap (invoke "ref_as_data" (i32.const 4)) "cast failure")
(assert_trap (invoke "ref_as_data" (i32.const 5)) "cast failure")
(assert_trap (invoke "ref_as_data" (i32.const 6)) "cast failure")

(assert_trap (invoke "ref_as_func" (i32.const 0)) "cast failure")
(assert_trap (invoke "ref_as_func" (i32.const 1)) "cast failure")
(assert_trap (invoke "ref_as_func" (i32.const 2)) "cast failure")
(assert_trap (invoke "ref_as_func" (i32.const 3)) "cast failure")
(assert_return (invoke "ref_as_func" (i32.const 4)))
(assert_trap (invoke "ref_as_func" (i32.const 5)) "cast failure")
(assert_trap (invoke "ref_as_func" (i32.const 6)) "cast failure")
