[package]
name = "near-vm-runner"
version = "0.0.0"
authors.workspace = true
publish = true
# Please update rust-toolchain.toml as well when changing version here:
rust-version.workspace = true
edition.workspace = true
license = "MIT OR Apache-2.0"
readme = "README.md"
categories = ["wasm"]
repository = "https://github.com/near/nearcore"
description = """
This crate implements the specification of the interface that Near blockchain exposes to the smart contracts.
"""

[dependencies]
anyhow = { workspace = true, optional = true }
borsh.workspace = true
finite-wasm = { workspace = true, features = ["instrument"] }
loupe.workspace = true
memoffset.workspace = true
once_cell.workspace = true
parity-wasm.workspace = true
prefix-sum-vec.workspace = true
serde.workspace = true
tracing.workspace = true
wasmparser.workspace = true
wasmtime = { workspace = true, optional = true }

near-cache.workspace = true
near-vm-logic.workspace = true
near-vm-errors.workspace = true
near-primitives.workspace = true
near-stable-hasher.workspace = true

# Old versions of pwasm-utils we need to preserve backwards compatibility under
# old protocol versions.
pwasm-utils_12.workspace = true
parity-wasm_41.workspace = true

[target.'cfg(target_arch = "x86_64")'.dependencies]
wasmer-runtime = { workspace = true, optional = true }
wasmer-runtime-core = { workspace = true, optional = true}
wasmer-compiler = { workspace = true, optional = true }
wasmer-compiler-singlepass = { workspace = true, optional = true }
wasmer-engine = { workspace = true, optional = true }
wasmer-engine-universal = { workspace = true, optional = true }
wasmer-types = { workspace = true, optional = true }
wasmer-vm = { workspace = true, optional = true }
near-vm-compiler = { workspace = true, optional = true }
near-vm-compiler-singlepass = { workspace = true, optional = true }
near-vm-engine = { workspace = true, optional = true }
near-vm-engine-universal = { workspace = true, features = ["compiler"], optional = true }
near-vm-types = { workspace = true, optional = true }
near-vm-vm = { workspace = true, optional = true }

[dev-dependencies]
arbitrary.workspace = true
assert_matches.workspace = true
bolero.workspace = true
expect-test.workspace = true
hex.workspace = true
near-primitives-core.workspace = true
near-test-contracts.workspace = true
rand.workspace = true
wasm-smith.workspace = true
wasmprinter.workspace = true
wat.workspace = true

[features]
# all vms enabled for now
default = [
  "wasmer0_vm",
  "wasmtime_vm",
  "wasmer2_vm",
  "near_vm",
]
wasmer0_vm = [ "wasmer-runtime", "wasmer-runtime-core" ]
wasmtime_vm = [ "wasmtime", "anyhow"]
wasmer2_vm = [
    "wasmer-compiler",
    "wasmer-compiler-singlepass",
    "wasmer-engine",
    "wasmer-engine-universal",
    "wasmer-types",
    "wasmer-vm"
]
near_vm = [
    "near-vm-compiler",
    "near-vm-compiler-singlepass",
    "near-vm-engine",
    "near-vm-engine-universal",
    "near-vm-types",
    "near-vm-vm"
]

# Force usage of a specific wasm vm irrespective of protocol version.
force_wasmer0 = ["wasmer0_vm"]
force_wasmtime = ["wasmtime_vm"]
force_wasmer2 = ["wasmer2_vm"]
force_near_vm = ["near_vm"]

no_cpu_compatibility_checks = []

no_cache = []

protocol_feature_fix_contract_loading_cost = [
    "near-primitives/protocol_feature_fix_contract_loading_cost",
    "near-vm-logic/protocol_feature_fix_contract_loading_cost",
]

nightly = [
    "near-primitives/nightly",
    "protocol_feature_fix_contract_loading_cost",
]
sandbox = ["near-vm-logic/sandbox"]
io_trace = ["near-vm-logic/io_trace"]


[package.metadata.cargo-udeps.ignore]
# `no_cache` feature leads to an unused `cached` crate
normal = ["cached"]
