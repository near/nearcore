[package]
name = "integration-tests"
version = "1.2.0"
authors = ["Near Inc <hello@nearprotocol.com>"]
edition = "2018"

[dependencies]
actix = "=0.11.0-beta.2"
actix-rt = "2"
assert_matches = "1.3"
awc = "3.0.0-beta.5"
base64 = "0.13"
borsh = "0.8.1"
bytes = "1"
cached = "0.23"
chrono = { version = "0.4.4", features = ["serde"] }
ed25519-dalek = "1"
funty = "=1.1.0" # Pin dependency to avoid compilation errors: https://github.com/myrrlyn/funty/issues/3
futures = "0.3"
hex = "0.4"
lazy_static = "1.4"
log = "0.4"
parity-secp256k1 = "0.7"
primitive-types = "0.9"
rand = "0.7"
serde = { version = "1", features = [ "derive" ] }
serde_json = "1"
strum = { version = "0.20", features = ["derive"] }
tempfile = "3"
tokio = { version = "1.1", features = ["full"] }
tracing = "0.1.13"

near-actix-test-utils = { path = "../test-utils/actix-test-utils" }
near-chain = { path = "../chain/chain" }
near-chain-configs = { path = "../core/chain-configs" }
near-chunks = { path = "../chain/chunks" }
near-client = { path = "../chain/client" }
near-client-primitives = { path = "../chain/client-primitives" }
near-crypto = { path = "../core/crypto" }
near-epoch-manager = { path = "../chain/epoch_manager" }
near-jsonrpc = { path = "../chain/jsonrpc" }
near-jsonrpc-client = { path = "../chain/jsonrpc/client" }
near-jsonrpc-primitives = { path = "../chain/jsonrpc-primitives" }
near-logger-utils = { path = "../test-utils/logger" }
near-metrics = { path = "../core/metrics" }
near-network = { path = "../chain/network" }
near-performance-metrics = { path = "../utils/near-performance-metrics" }
near-performance-metrics-macros = { path = "../utils/near-performance-metrics-macros" }
near-pool = { path = "../chain/pool" }
near-primitives = { path = "../core/primitives" }
near-primitives-core = { path = "../core/primitives-core", version = "0.1.0" }
near-runtime-utils = { path = "../runtime/near-runtime-utils" }
near-store = { path = "../core/store" }
near-telemetry = { path = "../chain/telemetry" }
near-test-contracts = { path = "../runtime/near-test-contracts" }
near-vm-errors = { path = "../runtime/near-vm-errors" }
near-vm-logic = { path = "../runtime/near-vm-logic", version = "3.0.0", features = ["costs_counting"]}
near-vm-runner = {path = "../runtime/near-vm-runner" }
nearcore = { path = "../nearcore" }
node-runtime = { path = "../runtime/runtime"}
testlib = { path = "./testlib" }


[features]
adversarial = ["nearcore/adversarial"]
costs_counting = ["near-vm-logic/costs_counting"]
expensive_tests = []
nightly_protocol = ["nearcore/nightly_protocol", "testlib/nightly_protocol"]
nightly_protocol_features = ["nearcore/nightly_protocol_features", "testlib/nightly_protocol_features", "protocol_feature_alt_bn128", "protocol_feature_restore_receipts_after_fix"]
performance_stats = ["nearcore/performance_stats", "near-network/performance_stats"]
protocol_feature_alt_bn128 = ["nearcore/protocol_feature_alt_bn128"]
protocol_feature_evm = ["nearcore/protocol_feature_evm", "testlib/protocol_feature_evm"]
protocol_feature_restore_receipts_after_fix = ["nearcore/protocol_feature_restore_receipts_after_fix"]
regression_tests = []
sandbox = ["near-network/sandbox", "near-chain/sandbox", "node-runtime/sandbox"]

[[test]]
name = "sandbox"
path = "tests/client/sandbox.rs"
required-features = ["sandbox"]

[[test]]
name = "test_miscs"
path = "tests/vm-logic/test_miscs.rs"
required-features = ["costs_counting"]

[[test]]
name = "failures"
path = "tests/evm-runner/failures.rs"
required-features = ["protocol_feature_evm"]

[[test]]
name = "standard_ops"
path = "tests/evm-runner/standard_ops.rs"
required-features = ["protocol_feature_evm"]
